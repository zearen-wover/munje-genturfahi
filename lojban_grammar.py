from pyparsing import *

pyparsing.enable_packrat()

comma = Regex('[,]')
dot_star = Empty()
space_char1 = Literal('	')
space_char2 = Literal('\r')
EOF = ZeroOrMore(comma) + StringEnd()
a = ZeroOrMore(comma) + Regex('[aA]')
e = ZeroOrMore(comma) + Regex('[eE]')
i = ZeroOrMore(comma) + Regex('[iI]')
o = ZeroOrMore(comma) + Regex('[oO]')
space_char = Regex('[.?! ]') | space_char1 | space_char2
u = ZeroOrMore(comma) + Regex('[uU]')
y = ZeroOrMore(comma) + Regex('[yY]')
non_space = ~space_char + Regex('.')
pause = ZeroOrMore(comma) + (space_char | EOF)
A = Forward()
A_clause = Forward()
A_no_SA_handling = Forward()
A_post = Forward()
A_pre = Forward()
BAI = Forward()
BAI_clause = Forward()
BAI_no_SA_handling = Forward()
BAI_post = Forward()
BAI_pre = Forward()
BAhE = Forward()
BAhE_clause = Forward()
BAhE_no_SA_handling = Forward()
BAhE_post = Forward()
BAhE_pre = Forward()
BE = Forward()
BE_clause = Forward()
BE_no_SA_handling = Forward()
BE_post = Forward()
BE_pre = Forward()
BEI = Forward()
BEI_clause = Forward()
BEI_no_SA_handling = Forward()
BEI_post = Forward()
BEI_pre = Forward()
BEhO = Forward()
BEhO_clause = Forward()
BEhO_no_SA_handling = Forward()
BEhO_post = Forward()
BEhO_pre = Forward()
BIhE = Forward()
BIhE_clause = Forward()
BIhE_no_SA_handling = Forward()
BIhE_post = Forward()
BIhE_pre = Forward()
BIhI = Forward()
BIhI_clause = Forward()
BIhI_no_SA_handling = Forward()
BIhI_post = Forward()
BIhI_pre = Forward()
BO = Forward()
BO_clause = Forward()
BO_no_SA_handling = Forward()
BO_post = Forward()
BO_pre = Forward()
BOI = Forward()
BOI_clause = Forward()
BOI_no_SA_handling = Forward()
BOI_post = Forward()
BOI_pre = Forward()
BRIVLA = Forward()
BRIVLA_clause = Forward()
BRIVLA_no_SA_handling = Forward()
BRIVLA_post = Forward()
BRIVLA_pre = Forward()
BU = Forward()
BU_clause = Forward()
BU_clause_no_SA = Forward()
BU_no_SA_handling = Forward()
BU_post = Forward()
BU_pre = Forward()
BU_pre_no_SA = Forward()
BY = Forward()
BY_clause = Forward()
BY_no_SA_handling = Forward()
BY_post = Forward()
BY_pre = Forward()
CAI = Forward()
CAI_clause = Forward()
CAI_no_SA_handling = Forward()
CAI_post = Forward()
CAI_pre = Forward()
CAhA = Forward()
CAhA_clause = Forward()
CAhA_no_SA_handling = Forward()
CAhA_post = Forward()
CAhA_pre = Forward()
CCV_rafsi = Forward()
CEI = Forward()
CEI_clause = Forward()
CEI_no_SA_handling = Forward()
CEI_post = Forward()
CEI_pre = Forward()
CEhE = Forward()
CEhE_clause = Forward()
CEhE_no_SA_handling = Forward()
CEhE_post = Forward()
CEhE_pre = Forward()
CMAVO = Forward()
CMAVO_clause = Forward()
CMAVO_no_SA_handling = Forward()
CMAVO_post = Forward()
CMAVO_pre = Forward()
CMENE = Forward()
CMENE_clause = Forward()
CMENE_no_SA_handling = Forward()
CMENE_post = Forward()
CMENE_pre = Forward()
CO = Forward()
CO_clause = Forward()
CO_no_SA_handling = Forward()
CO_post = Forward()
CO_pre = Forward()
COI = Forward()
COI_clause = Forward()
COI_no_SA_handling = Forward()
COI_post = Forward()
COI_pre = Forward()
CU = Forward()
CU_clause = Forward()
CU_no_SA_handling = Forward()
CU_post = Forward()
CU_pre = Forward()
CUhE = Forward()
CUhE_clause = Forward()
CUhE_no_SA_handling = Forward()
CUhE_post = Forward()
CUhE_pre = Forward()
CVC_rafsi = Forward()
CVCy_lujvo = Forward()
CVV_final_rafsi = Forward()
CVV_rafsi = Forward()
DAhO = Forward()
DAhO_clause = Forward()
DAhO_no_SA_handling = Forward()
DAhO_post = Forward()
DAhO_pre = Forward()
DOI = Forward()
DOI_clause = Forward()
DOI_no_SA_handling = Forward()
DOI_post = Forward()
DOI_pre = Forward()
DOhU = Forward()
DOhU_clause = Forward()
DOhU_no_SA_handling = Forward()
DOhU_post = Forward()
DOhU_pre = Forward()
FA = Forward()
FA_clause = Forward()
FA_no_SA_handling = Forward()
FA_post = Forward()
FA_pre = Forward()
FAhA = Forward()
FAhA_clause = Forward()
FAhA_no_SA_handling = Forward()
FAhA_post = Forward()
FAhA_pre = Forward()
FAhO = Forward()
FAhO_clause = Forward()
FEhE = Forward()
FEhE_clause = Forward()
FEhE_no_SA_handling = Forward()
FEhE_post = Forward()
FEhE_pre = Forward()
FEhU = Forward()
FEhU_clause = Forward()
FEhU_no_SA_handling = Forward()
FEhU_post = Forward()
FEhU_pre = Forward()
FIhO = Forward()
FIhO_clause = Forward()
FIhO_no_SA_handling = Forward()
FIhO_post = Forward()
FIhO_pre = Forward()
FOI = Forward()
FOI_clause = Forward()
FOI_no_SA_handling = Forward()
FOI_post = Forward()
FOI_pre = Forward()
FUhA = Forward()
FUhA_clause = Forward()
FUhA_no_SA_handling = Forward()
FUhA_post = Forward()
FUhA_pre = Forward()
FUhE = Forward()
FUhE_clause = Forward()
FUhE_no_SA_handling = Forward()
FUhE_post = Forward()
FUhE_pre = Forward()
FUhO = Forward()
FUhO_clause = Forward()
FUhO_no_SA_handling = Forward()
FUhO_post = Forward()
FUhO_pre = Forward()
GA = Forward()
GA_clause = Forward()
GA_no_SA_handling = Forward()
GA_post = Forward()
GA_pre = Forward()
GAhO = Forward()
GAhO_clause = Forward()
GAhO_no_SA_handling = Forward()
GAhO_post = Forward()
GAhO_pre = Forward()
GEhU = Forward()
GEhU_clause = Forward()
GEhU_no_SA_handling = Forward()
GEhU_post = Forward()
GEhU_pre = Forward()
GI = Forward()
GI_clause = Forward()
GI_no_SA_handling = Forward()
GI_post = Forward()
GI_pre = Forward()
GIhA = Forward()
GIhA_clause = Forward()
GIhA_no_SA_handling = Forward()
GIhA_post = Forward()
GIhA_pre = Forward()
GOI = Forward()
GOI_clause = Forward()
GOI_no_SA_handling = Forward()
GOI_post = Forward()
GOI_pre = Forward()
GOhA = Forward()
GOhA_clause = Forward()
GOhA_no_SA_handling = Forward()
GOhA_post = Forward()
GOhA_pre = Forward()
GUhA = Forward()
GUhA_clause = Forward()
GUhA_no_SA_handling = Forward()
GUhA_post = Forward()
GUhA_pre = Forward()
I = Forward()
I_clause = Forward()
I_no_SA_handling = Forward()
I_post = Forward()
I_pre = Forward()
JA = Forward()
JA_clause = Forward()
JA_no_SA_handling = Forward()
JA_post = Forward()
JA_pre = Forward()
JAI = Forward()
JAI_clause = Forward()
JAI_no_SA_handling = Forward()
JAI_post = Forward()
JAI_pre = Forward()
JOI = Forward()
JOI_clause = Forward()
JOI_no_SA_handling = Forward()
JOI_post = Forward()
JOI_pre = Forward()
JOhI = Forward()
JOhI_clause = Forward()
JOhI_no_SA_handling = Forward()
JOhI_post = Forward()
JOhI_pre = Forward()
KE = Forward()
KE_clause = Forward()
KE_no_SA_handling = Forward()
KE_post = Forward()
KE_pre = Forward()
KEI = Forward()
KEI_clause = Forward()
KEI_no_SA_handling = Forward()
KEI_post = Forward()
KEI_pre = Forward()
KEhE = Forward()
KEhE_clause = Forward()
KEhE_no_SA_handling = Forward()
KEhE_post = Forward()
KEhE_pre = Forward()
KI = Forward()
KI_clause = Forward()
KI_no_SA_handling = Forward()
KI_post = Forward()
KI_pre = Forward()
KOhA = Forward()
KOhA_clause = Forward()
KOhA_no_SA_handling = Forward()
KOhA_post = Forward()
KOhA_pre = Forward()
KU = Forward()
KU_clause = Forward()
KU_no_SA_handling = Forward()
KU_post = Forward()
KU_pre = Forward()
KUhE = Forward()
KUhE_clause = Forward()
KUhE_no_SA_handling = Forward()
KUhE_post = Forward()
KUhE_pre = Forward()
KUhO = Forward()
KUhO_clause = Forward()
KUhO_no_SA_handling = Forward()
KUhO_post = Forward()
KUhO_pre = Forward()
LA = Forward()
LA_clause = Forward()
LA_no_SA_handling = Forward()
LA_post = Forward()
LA_pre = Forward()
LAU = Forward()
LAU_clause = Forward()
LAU_no_SA_handling = Forward()
LAU_post = Forward()
LAU_pre = Forward()
LAhE = Forward()
LAhE_clause = Forward()
LAhE_no_SA_handling = Forward()
LAhE_post = Forward()
LAhE_pre = Forward()
LE = Forward()
LE_clause = Forward()
LE_no_SA_handling = Forward()
LE_post = Forward()
LE_pre = Forward()
LEhU = Forward()
LEhU_clause = Forward()
LEhU_clause_no_SA = Forward()
LEhU_no_SA_handling = Forward()
LEhU_post = Forward()
LEhU_pre = Forward()
LEhU_pre_no_SA = Forward()
LI = Forward()
LI_clause = Forward()
LI_no_SA_handling = Forward()
LI_post = Forward()
LI_pre = Forward()
LIhU = Forward()
LIhU_clause = Forward()
LIhU_no_SA_handling = Forward()
LIhU_post = Forward()
LIhU_pre = Forward()
LOhO = Forward()
LOhO_clause = Forward()
LOhO_no_SA_handling = Forward()
LOhO_post = Forward()
LOhO_pre = Forward()
LOhU = Forward()
LOhU_clause = Forward()
LOhU_no_SA_handling = Forward()
LOhU_post = Forward()
LOhU_pre = Forward()
LU = Forward()
LU_clause = Forward()
LU_no_SA_handling = Forward()
LU_post = Forward()
LU_pre = Forward()
LUhU = Forward()
LUhU_clause = Forward()
LUhU_no_SA_handling = Forward()
LUhU_post = Forward()
LUhU_pre = Forward()
MAI = Forward()
MAI_clause = Forward()
MAI_no_SA_handling = Forward()
MAI_post = Forward()
MAI_pre = Forward()
MAhO = Forward()
MAhO_clause = Forward()
MAhO_no_SA_handling = Forward()
MAhO_post = Forward()
MAhO_pre = Forward()
ME = Forward()
ME_clause = Forward()
ME_no_SA_handling = Forward()
ME_post = Forward()
ME_pre = Forward()
MEhU = Forward()
MEhU_clause = Forward()
MEhU_no_SA_handling = Forward()
MEhU_post = Forward()
MEhU_pre = Forward()
MOI = Forward()
MOI_clause = Forward()
MOI_no_SA_handling = Forward()
MOI_post = Forward()
MOI_pre = Forward()
MOhE = Forward()
MOhE_clause = Forward()
MOhE_no_SA_handling = Forward()
MOhE_post = Forward()
MOhE_pre = Forward()
MOhI = Forward()
MOhI_clause = Forward()
MOhI_no_SA_handling = Forward()
MOhI_post = Forward()
MOhI_pre = Forward()
NA = Forward()
NA_clause = Forward()
NA_no_SA_handling = Forward()
NA_post = Forward()
NA_pre = Forward()
NAI = Forward()
NAI_clause = Forward()
NAI_no_SA_handling = Forward()
NAI_post = Forward()
NAI_pre = Forward()
NAhE = Forward()
NAhE_clause = Forward()
NAhE_no_SA_handling = Forward()
NAhE_post = Forward()
NAhE_pre = Forward()
NAhU = Forward()
NAhU_clause = Forward()
NAhU_no_SA_handling = Forward()
NAhU_post = Forward()
NAhU_pre = Forward()
NIhE = Forward()
NIhE_clause = Forward()
NIhE_no_SA_handling = Forward()
NIhE_post = Forward()
NIhE_pre = Forward()
NIhO = Forward()
NIhO_clause = Forward()
NIhO_no_SA_handling = Forward()
NIhO_post = Forward()
NIhO_pre = Forward()
NOI = Forward()
NOI_clause = Forward()
NOI_no_SA_handling = Forward()
NOI_post = Forward()
NOI_pre = Forward()
NU = Forward()
NU_clause = Forward()
NU_no_SA_handling = Forward()
NU_post = Forward()
NU_pre = Forward()
NUhA = Forward()
NUhA_clause = Forward()
NUhA_no_SA_handling = Forward()
NUhA_post = Forward()
NUhA_pre = Forward()
NUhI = Forward()
NUhI_clause = Forward()
NUhI_no_SA_handling = Forward()
NUhI_post = Forward()
NUhI_pre = Forward()
NUhU = Forward()
NUhU_clause = Forward()
NUhU_no_SA_handling = Forward()
NUhU_post = Forward()
NUhU_pre = Forward()
PA = Forward()
PA_clause = Forward()
PA_no_SA_handling = Forward()
PA_post = Forward()
PA_pre = Forward()
PEhE = Forward()
PEhE_clause = Forward()
PEhE_no_SA_handling = Forward()
PEhE_post = Forward()
PEhE_pre = Forward()
PEhO = Forward()
PEhO_clause = Forward()
PEhO_no_SA_handling = Forward()
PEhO_post = Forward()
PEhO_pre = Forward()
PU = Forward()
PU_clause = Forward()
PU_no_SA_handling = Forward()
PU_post = Forward()
PU_pre = Forward()
RAhO = Forward()
RAhO_clause = Forward()
RAhO_no_SA_handling = Forward()
RAhO_post = Forward()
RAhO_pre = Forward()
ROI = Forward()
ROI_clause = Forward()
ROI_no_SA_handling = Forward()
ROI_post = Forward()
ROI_pre = Forward()
SA = Forward()
SA_clause = Forward()
SA_post = Forward()
SA_pre = Forward()
SE = Forward()
SE_clause = Forward()
SE_no_SA_handling = Forward()
SE_post = Forward()
SE_pre = Forward()
SEI = Forward()
SEI_clause = Forward()
SEI_no_SA_handling = Forward()
SEI_post = Forward()
SEI_pre = Forward()
SEhU = Forward()
SEhU_clause = Forward()
SEhU_no_SA_handling = Forward()
SEhU_post = Forward()
SEhU_pre = Forward()
SI = Forward()
SI_clause = Forward()
SOI = Forward()
SOI_clause = Forward()
SOI_no_SA_handling = Forward()
SOI_post = Forward()
SOI_pre = Forward()
SU = Forward()
SU_clause = Forward()
SU_post = Forward()
SU_pre = Forward()
TAhE = Forward()
TAhE_clause = Forward()
TAhE_no_SA_handling = Forward()
TAhE_post = Forward()
TAhE_pre = Forward()
TEI = Forward()
TEI_clause = Forward()
TEI_no_SA_handling = Forward()
TEI_post = Forward()
TEI_pre = Forward()
TEhU = Forward()
TEhU_clause = Forward()
TEhU_no_SA_handling = Forward()
TEhU_post = Forward()
TEhU_pre = Forward()
TO = Forward()
TO_clause = Forward()
TO_no_SA_handling = Forward()
TO_post = Forward()
TO_pre = Forward()
TOI = Forward()
TOI_clause = Forward()
TOI_no_SA_handling = Forward()
TOI_post = Forward()
TOI_pre = Forward()
TUhE = Forward()
TUhE_clause = Forward()
TUhE_no_SA_handling = Forward()
TUhE_post = Forward()
TUhE_pre = Forward()
TUhU = Forward()
TUhU_clause = Forward()
TUhU_no_SA_handling = Forward()
TUhU_post = Forward()
TUhU_pre = Forward()
UI = Forward()
UI_clause = Forward()
UI_no_SA_handling = Forward()
UI_post = Forward()
UI_pre = Forward()
VA = Forward()
VA_clause = Forward()
VA_no_SA_handling = Forward()
VA_post = Forward()
VA_pre = Forward()
VAU = Forward()
VAU_clause = Forward()
VAU_no_SA_handling = Forward()
VAU_post = Forward()
VAU_pre = Forward()
VEI = Forward()
VEI_clause = Forward()
VEI_no_SA_handling = Forward()
VEI_post = Forward()
VEI_pre = Forward()
VEhA = Forward()
VEhA_clause = Forward()
VEhA_no_SA_handling = Forward()
VEhA_post = Forward()
VEhA_pre = Forward()
VEhO = Forward()
VEhO_clause = Forward()
VEhO_no_SA_handling = Forward()
VEhO_post = Forward()
VEhO_pre = Forward()
VIhA = Forward()
VIhA_clause = Forward()
VIhA_no_SA_handling = Forward()
VIhA_post = Forward()
VIhA_pre = Forward()
VUhO = Forward()
VUhO_clause = Forward()
VUhO_no_SA_handling = Forward()
VUhO_post = Forward()
VUhO_pre = Forward()
VUhU = Forward()
VUhU_clause = Forward()
VUhU_no_SA_handling = Forward()
VUhU_post = Forward()
VUhU_pre = Forward()
XI = Forward()
XI_clause = Forward()
XI_no_SA_handling = Forward()
XI_post = Forward()
XI_pre = Forward()
Y = Forward()
ZAhO = Forward()
ZAhO_clause = Forward()
ZAhO_no_SA_handling = Forward()
ZAhO_post = Forward()
ZAhO_pre = Forward()
ZEI = Forward()
ZEI_clause = Forward()
ZEI_clause_no_SA = Forward()
ZEI_no_SA_handling = Forward()
ZEI_post = Forward()
ZEI_pre = Forward()
ZEI_pre_no_SA = Forward()
ZEhA = Forward()
ZEhA_clause = Forward()
ZEhA_no_SA_handling = Forward()
ZEhA_post = Forward()
ZEhA_pre = Forward()
ZI = Forward()
ZI_clause = Forward()
ZI_no_SA_handling = Forward()
ZI_post = Forward()
ZI_pre = Forward()
ZIhE = Forward()
ZIhE_clause = Forward()
ZIhE_no_SA_handling = Forward()
ZIhE_post = Forward()
ZIhE_pre = Forward()
ZO = Forward()
ZO_clause = Forward()
ZO_no_SA_handling = Forward()
ZO_post = Forward()
ZO_pre = Forward()
ZOI = Forward()
ZOI_clause = Forward()
ZOI_no_SA_handling = Forward()
ZOI_post = Forward()
ZOI_pre = Forward()
ZOhU = Forward()
ZOhU_clause = Forward()
ZOhU_no_SA_handling = Forward()
ZOhU_post = Forward()
ZOhU_pre = Forward()
affricate = Forward()
any_extended_rafsi = Forward()
any_syllable = Forward()
any_word_SA_handling = Forward()
b = Forward()
bridi_tail = Forward()
bridi_tail_1 = Forward()
bridi_tail_2 = Forward()
bridi_tail_3 = Forward()
bridi_tail_sa = Forward()
bridi_tail_start = Forward()
brivla = Forward()
brivla_core = Forward()
brivla_head = Forward()
brivla_rafsi = Forward()
bu_clause = Forward()
bu_clause_no_SA = Forward()
bu_clause_no_pre = Forward()
bu_tail = Forward()
c = Forward()
cehe_sa = Forward()
cluster = Forward()
cmavo = Forward()
cmavo_form = Forward()
cmene = Forward()
coda = Forward()
consonant = Forward()
consonant_final = Forward()
consonantal_syllable = Forward()
d = Forward()
digit = Forward()
diphthong = Forward()
ek = Forward()
erasable_clause = Forward()
extended_rafsi = Forward()
f = Forward()
faho_clause = Forward()
final_syllable = Forward()
fore_operands = Forward()
fragment = Forward()
free = Forward()
fuhivla = Forward()
fuhivla_head = Forward()
fuhivla_rafsi = Forward()
g = Forward()
gek = Forward()
gek_sentence = Forward()
gek_termset = Forward()
gihek = Forward()
gihek_1 = Forward()
gihek_sa = Forward()
gik = Forward()
gismu = Forward()
glide = Forward()
guhek = Forward()
h = Forward()
indicator = Forward()
indicators = Forward()
initial = Forward()
initial_pair = Forward()
initial_rafsi = Forward()
initial_spaces = Forward()
interval = Forward()
interval_property = Forward()
intro_null = Forward()
intro_si_clause = Forward()
j = Forward()
jek = Forward()
joik = Forward()
joik_ek = Forward()
joik_ek_1 = Forward()
joik_ek_sa = Forward()
joik_jek = Forward()
k = Forward()
known_cmavo_SA = Forward()
l = Forward()
lerfu_string = Forward()
lerfu_word = Forward()
li_clause = Forward()
linkargs = Forward()
linkargs_1 = Forward()
linkargs_sa = Forward()
linkargs_start = Forward()
links = Forward()
links_1 = Forward()
links_sa = Forward()
links_start = Forward()
liquid = Forward()
lojban_word = Forward()
long_rafsi = Forward()
lujvo = Forward()
m = Forward()
mex = Forward()
mex_0 = Forward()
mex_1 = Forward()
mex_2 = Forward()
mex_forethought = Forward()
mex_operator = Forward()
mex_sa = Forward()
mex_start = Forward()
n = Forward()
non_lojban_word = Forward()
nucleus = Forward()
number = Forward()
onset = Forward()
operand = Forward()
operand_0 = Forward()
operand_1 = Forward()
operand_2 = Forward()
operand_3 = Forward()
operand_sa = Forward()
operand_start = Forward()
operator = Forward()
operator_0 = Forward()
operator_1 = Forward()
operator_2 = Forward()
operator_sa = Forward()
operator_start = Forward()
other = Forward()
p = Forward()
paragraph = Forward()
paragraphs = Forward()
pehe_sa = Forward()
post_clause = Forward()
post_word = Forward()
pre_clause = Forward()
pre_zei_bu = Forward()
pre_zei_bu_no_SA = Forward()
prenex = Forward()
quantifier = Forward()
r = Forward()
r_hyphen = Forward()
rafsi_string = Forward()
relative_clause = Forward()
relative_clause_1 = Forward()
relative_clause_sa = Forward()
relative_clause_start = Forward()
relative_clauses = Forward()
rp_clause = Forward()
rp_expression = Forward()
rp_expression_tail = Forward()
s = Forward()
sa_word = Forward()
selbri = Forward()
selbri_1 = Forward()
selbri_2 = Forward()
selbri_3 = Forward()
selbri_4 = Forward()
selbri_5 = Forward()
selbri_6 = Forward()
sentence = Forward()
sentence_sa = Forward()
sentence_start = Forward()
short_final_rafsi = Forward()
si_clause = Forward()
si_word = Forward()
sibilant = Forward()
simple_tense_modal = Forward()
slinkuhi = Forward()
space = Forward()
space_int_props = Forward()
space_interval = Forward()
space_offset = Forward()
spaces = Forward()
stag = Forward()
statement = Forward()
statement_1 = Forward()
statement_2 = Forward()
statement_3 = Forward()
stress = Forward()
stressed = Forward()
stressed_CCV_rafsi = Forward()
stressed_CVC_rafsi = Forward()
stressed_CVV_rafsi = Forward()
stressed_brivla_rafsi = Forward()
stressed_diphthong = Forward()
stressed_extended_rafsi = Forward()
stressed_fuhivla_rafsi = Forward()
stressed_initial_rafsi = Forward()
stressed_long_rafsi = Forward()
stressed_syllable = Forward()
stressed_vowel = Forward()
stressed_y_less_rafsi = Forward()
stressed_y_rafsi = Forward()
su_clause = Forward()
su_word = Forward()
subsentence = Forward()
sumti = Forward()
sumti_1 = Forward()
sumti_2 = Forward()
sumti_3 = Forward()
sumti_4 = Forward()
sumti_5 = Forward()
sumti_6 = Forward()
sumti_tail = Forward()
sumti_tail_1 = Forward()
syllabic = Forward()
syllable = Forward()
t = Forward()
tag = Forward()
tail_terms = Forward()
tanru_unit = Forward()
tanru_unit_1 = Forward()
tanru_unit_2 = Forward()
tense_modal = Forward()
term = Forward()
term_1 = Forward()
term_sa = Forward()
term_start = Forward()
terms = Forward()
terms_1 = Forward()
terms_2 = Forward()
terms_gik_terms = Forward()
termset = Forward()
text = Forward()
text_1 = Forward()
text_part_2 = Forward()
time = Forward()
time_offset = Forward()
unstressed_diphthong = Forward()
unstressed_syllable = Forward()
unstressed_vowel = Forward()
unvoiced = Forward()
v = Forward()
vocative = Forward()
voiced = Forward()
vowel = Forward()
word = Forward()
words = Forward()
x = Forward()
xi_clause = Forward()
y_less_rafsi = Forward()
y_rafsi = Forward()
ybu = Forward()
z = Forward()
zei_clause = Forward()
zei_clause_no_SA = Forward()
zei_clause_no_pre = Forward()
zei_tail = Forward()
A << (FollowedBy(cmavo) + (a | e | j + (i | o | u)) + FollowedBy(post_word))
A_clause << (A_pre + A_post)
A_no_SA_handling << (pre_clause + A + post_clause)
A_post << (post_clause)
A_pre << (pre_clause + A + Optional(spaces))
BAI << (FollowedBy(cmavo) + d + u + h + (o | s + i + h + (u | z + a + (u | k + i + h + (i | d + u + h + (i | c + u + h + (u | t + u + h + (i | t + i + h + (u | d + i + h + (o | j + i + h + (u | r + i + h + (a | n + i + h + (i | m + u + h + (i | k + i + h + (u | v + a + h + (u | k + o + (i | c + a + h + (i | t + a + h + (i | p + u + h + (e | j + a + h + (i | k + a + (i | b + a + (i | f + i + h + (e | d + e + h + (i | c + i + h + (o | m + a + (u | m + u + h + (u | r + i + h + (i | r + a + h + (i | k + a + h + (a | p + a + h + (u | p + a + h + (a | l + e + h + (a | k + u + h + (u | t + a + (i | b + a + (u | m + a + h + (i | c + i + h + (e | f + a + (u | p + o + h + (i | c + a + (u | m + a + h + (e | c + i + h + (u | r + a + h + (a | p + u + h + (a | l + i + h + (e | l + a + h + (u | b + a + h + (i | k + a + h + (i | s + a + (u | f + a + h + (e | b + e + h + (i | t + i + h + (i | j + a + h + (e | g + a + h + (a | v + a + h + (o | j + i + h + (o | m + e + h + (a | d + o + h + (e | j + i + h + (e | p + i + h + (o | g + a + (u | z + u + h + (e | m + e + h + (e | r + a + i)))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))) + FollowedBy(post_word))
BAI_clause << (BAI_pre + BAI_post)
BAI_no_SA_handling << (pre_clause + BAI + post_clause)
BAI_post << (post_clause)
BAI_pre << (pre_clause + BAI + Optional(spaces))
BAhE << (FollowedBy(cmavo) + b + a + h + (e | z + a + h + e) + FollowedBy(post_word))
BAhE_clause << (OneOrMore(BAhE_pre + BAhE_post))
BAhE_no_SA_handling << (BAhE + Optional(spaces) + BAhE_post)
BAhE_post << (Optional(si_clause) + ~ZEI_clause + ~BU_clause)
BAhE_pre << (BAhE + Optional(spaces))
BE << (FollowedBy(cmavo) + b + e + FollowedBy(post_word))
BE_clause << (BE_pre + BE_post)
BE_no_SA_handling << (pre_clause + BE + post_clause)
BE_post << (post_clause)
BE_pre << (pre_clause + BE + Optional(spaces))
BEI << (FollowedBy(cmavo) + b + e + i + FollowedBy(post_word))
BEI_clause << (BEI_pre + BEI_post)
BEI_no_SA_handling << (pre_clause + BEI + post_clause)
BEI_post << (post_clause)
BEI_pre << (pre_clause + BEI + Optional(spaces))
BEhO << (FollowedBy(cmavo) + b + e + h + o + FollowedBy(post_word))
BEhO_clause << (BEhO_pre + BEhO_post)
BEhO_no_SA_handling << (pre_clause + BEhO + post_clause)
BEhO_post << (post_clause)
BEhO_pre << (pre_clause + BEhO + Optional(spaces))
BIhE << (FollowedBy(cmavo) + b + i + h + e + FollowedBy(post_word))
BIhE_clause << (BIhE_pre + BIhE_post)
BIhE_no_SA_handling << (pre_clause + BIhE + post_clause)
BIhE_post << (post_clause)
BIhE_pre << (pre_clause + BIhE + Optional(spaces))
BIhI << (FollowedBy(cmavo) + m + i + h + (i | b + i + h + (o | b + i + h + i)) + FollowedBy(post_word))
BIhI_clause << (BIhI_pre + BIhI_post)
BIhI_no_SA_handling << (pre_clause + BIhI + post_clause)
BIhI_post << (post_clause)
BIhI_pre << (pre_clause + BIhI + Optional(spaces))
BO << (FollowedBy(cmavo) + b + o + FollowedBy(post_word))
BO_clause << (BO_pre + BO_post)
BO_no_SA_handling << (pre_clause + BO + post_clause)
BO_post << (post_clause)
BO_pre << (pre_clause + BO + Optional(spaces))
BOI << (FollowedBy(cmavo) + b + o + i + FollowedBy(post_word))
BOI_clause << (BOI_pre + BOI_post)
BOI_no_SA_handling << (pre_clause + BOI + post_clause)
BOI_post << (post_clause)
BOI_pre << (pre_clause + BOI + Optional(spaces))
BRIVLA << (gismu | lujvo | fuhivla)
BRIVLA_clause << (BRIVLA_pre + (BRIVLA_post | zei_clause))
BRIVLA_no_SA_handling << (pre_clause + BRIVLA + (post_clause | zei_clause_no_SA))
BRIVLA_post << (post_clause)
BRIVLA_pre << (pre_clause + BRIVLA + Optional(spaces))
BU << (FollowedBy(cmavo) + b + u + FollowedBy(post_word))
BU_clause << (BU_pre + BU_post)
BU_clause_no_SA << (BU_pre_no_SA + BU + BU_post)
BU_no_SA_handling << (pre_clause + BU + Optional(spaces))
BU_post << (Optional(spaces))
BU_pre << (pre_clause + BU + Optional(spaces))
BU_pre_no_SA << (pre_clause)
BY << (ybu | FollowedBy(cmavo) + j + o + h + (o | r + u + h + (o | g + e + h + (o | j + e + h + (o | l + o + h + (a | n + a + h + (a | s + e + h + (e | t + o + h + (a | g + a + h + (e | y + h + (y | b + (y | c + (y | d + (y | f + (y | g + (y | j + (y | k + (y | l + (y | m + (y | n + (y | p + (y | r + (y | s + (y | t + (y | v + (y | x + (y | z + y)))))))))))))))))))))))))) + FollowedBy(post_word))
BY_clause << (BY_pre + (BY_post | bu_clause))
BY_no_SA_handling << (pre_clause + BY + (post_clause | bu_clause_no_SA))
BY_post << (post_clause)
BY_pre << (pre_clause + BY + Optional(spaces))
CAI << (FollowedBy(cmavo) + p + e + (i | c + a + (i | c + u + h + (i | s + a + (i | r + u + h + e)))) + FollowedBy(post_word))
CAI_clause << (CAI_pre + CAI_post)
CAI_no_SA_handling << (pre_clause + CAI + post_clause)
CAI_post << (post_clause)
CAI_pre << (pre_clause + CAI + Optional(spaces))
CAhA << (FollowedBy(cmavo) + c + a + h + (a | p + u + h + (i | n + u + h + (o | k + a + h + e))) + FollowedBy(post_word))
CAhA_clause << (CAhA_pre + CAhA_post)
CAhA_no_SA_handling << (pre_clause + CAhA + post_clause)
CAhA_post << (post_clause)
CAhA_pre << (pre_clause + CAhA + Optional(spaces))
CCV_rafsi << (initial_pair + unstressed_vowel)
CEI << (FollowedBy(cmavo) + c + e + i + FollowedBy(post_word))
CEI_clause << (CEI_pre + CEI_post)
CEI_no_SA_handling << (pre_clause + CEI + post_clause)
CEI_post << (post_clause)
CEI_pre << (pre_clause + CEI + Optional(spaces))
CEhE << (FollowedBy(cmavo) + c + e + h + e + FollowedBy(post_word))
CEhE_clause << (CEhE_pre + CEhE_post)
CEhE_no_SA_handling << (pre_clause + CEhE + post_clause)
CEhE_post << (post_clause)
CEhE_pre << (pre_clause + CEhE + Optional(spaces))
CMAVO << (A | BAI | BAhE | BE | BEI | BEhO | BIhE | BIhI | BO | BOI | BU | BY | CAhA | CAI | CEI | CEhE | CO | COI | CU | CUhE | DAhO | DOI | DOhU | FA | FAhA | FAhO | FEhE | FEhU | FIhO | FOI | FUhA | FUhE | FUhO | GA | GAhO | GEhU | GI | GIhA | GOI | GOhA | GUhA | I | JA | JAI | JOhI | JOI | KE | KEhE | KEI | KI | KOhA | KU | KUhE | KUhO | LA | LAU | LAhE | LE | LEhU | LI | LIhU | LOhO | LOhU | LU | LUhU | MAhO | MAI | ME | MEhU | MOhE | MOhI | MOI | NA | NAI | NAhE | NAhU | NIhE | NIhO | NOI | NU | NUhA | NUhI | NUhU | PA | PEhE | PEhO | PU | RAhO | ROI | SA | SE | SEI | SEhU | SI | SOI | SU | TAhE | TEhU | TEI | TO | TOI | TUhE | TUhU | UI | VA | VAU | VEI | VEhO | VUhU | VEhA | VIhA | VUhO | XI | ZAhO | ZEhA | ZEI | ZI | ZIhE | ZO | ZOI | ZOhU | cmavo)
CMAVO_clause << (CMAVO_pre + CMAVO_post)
CMAVO_no_SA_handling << (pre_clause + CMAVO + post_clause)
CMAVO_post << (post_clause)
CMAVO_pre << (pre_clause + CMAVO + Optional(spaces))
CMENE << (cmene)
CMENE_clause << (CMENE_pre + CMENE_post)
CMENE_no_SA_handling << (pre_clause + CMENE + post_clause)
CMENE_post << (post_clause)
CMENE_pre << (pre_clause + CMENE + Optional(spaces))
CO << (FollowedBy(cmavo) + c + o + FollowedBy(post_word))
CO_clause << (CO_pre + CO_post)
CO_no_SA_handling << (pre_clause + CO + post_clause)
CO_post << (post_clause)
CO_pre << (pre_clause + CO + Optional(spaces))
COI << (FollowedBy(cmavo) + j + u + h + (i | c + o + (i | f + i + h + (i | t + a + h + (a | m + u + h + (o | f + e + h + (o | c + o + h + (o | p + e + h + (u | k + e + h + (o | n + u + h + (e | r + e + h + (i | b + e + h + (e | j + e + h + (e | m + i + h + (e | k + i + h + (e | v + i + h + o))))))))))))))) + FollowedBy(post_word))
COI_clause << (COI_pre + COI_post)
COI_no_SA_handling << (pre_clause + COI + post_clause)
COI_post << (post_clause)
COI_pre << (pre_clause + COI + Optional(spaces))
CU << (FollowedBy(cmavo) + c + u + FollowedBy(post_word))
CU_clause << (CU_pre + CU_post)
CU_no_SA_handling << (pre_clause + CU + post_clause)
CU_post << (post_clause)
CU_pre << (pre_clause + CU + Optional(spaces))
CUhE << (FollowedBy(cmavo) + c + u + h + (e | n + a + u) + FollowedBy(post_word))
CUhE_clause << (CUhE_pre + CUhE_post)
CUhE_no_SA_handling << (pre_clause + CUhE + post_clause)
CUhE_post << (post_clause)
CUhE_pre << (pre_clause + CUhE + Optional(spaces))
CVC_rafsi << (consonant + unstressed_vowel + consonant)
CVCy_lujvo << (CVC_rafsi + y + Optional(h) + ZeroOrMore(initial_rafsi) + (brivla_core | stressed_CVC_rafsi + y + short_final_rafsi))
CVV_final_rafsi << (consonant + stressed_vowel + h + FollowedBy(final_syllable) + vowel + FollowedBy(post_word))
CVV_rafsi << (consonant + unstressed_vowel + h + (unstressed_vowel | unstressed_diphthong) + Optional(r_hyphen))
DAhO << (FollowedBy(cmavo) + d + a + h + o + FollowedBy(post_word))
DAhO_clause << (DAhO_pre + DAhO_post)
DAhO_no_SA_handling << (pre_clause + DAhO + post_clause)
DAhO_post << (post_clause)
DAhO_pre << (pre_clause + DAhO + Optional(spaces))
DOI << (FollowedBy(cmavo) + d + o + i + FollowedBy(post_word))
DOI_clause << (DOI_pre + DOI_post)
DOI_no_SA_handling << (pre_clause + DOI + post_clause)
DOI_post << (post_clause)
DOI_pre << (pre_clause + DOI + Optional(spaces))
DOhU << (FollowedBy(cmavo) + d + o + h + u + FollowedBy(post_word))
DOhU_clause << (DOhU_pre + DOhU_post)
DOhU_no_SA_handling << (pre_clause + DOhU + post_clause)
DOhU_post << (post_clause)
DOhU_pre << (pre_clause + DOhU + Optional(spaces))
FA << (FollowedBy(cmavo) + f + a + (i | f + (a | f + (e | f + (o | f + (u | f + i + h + (a | f + i)))))) + FollowedBy(post_word))
FA_clause << (FA_pre + FA_post)
FA_no_SA_handling << (pre_clause + FA + post_clause)
FA_post << (post_clause)
FA_pre << (pre_clause + FA + Optional(spaces))
FAhA << (FollowedBy(cmavo) + d + u + h + (a | b + e + h + (a | n + e + h + (u | v + u + h + (a | g + a + h + (u | t + i + h + (a | n + i + h + (a | c + a + h + (u | z + u + h + (a | r + i + h + (u | r + u + h + (u | r + e + h + (o | t + e + h + (e | b + u + h + (u | n + e + h + (a | p + a + h + (o | n + e + h + (i | t + o + h + (o | z + o + h + (i | z + e + h + (o | z + o + h + (a | f + a + h + a))))))))))))))))))))) + FollowedBy(post_word))
FAhA_clause << (FAhA_pre + FAhA_post)
FAhA_no_SA_handling << (pre_clause + FAhA + post_clause)
FAhA_post << (post_clause)
FAhA_pre << (pre_clause + FAhA + Optional(spaces))
FAhO << (FollowedBy(cmavo) + f + a + h + o + FollowedBy(post_word))
FAhO_clause << (pre_clause + FAhO + Optional(spaces))
FEhE << (FollowedBy(cmavo) + f + e + h + e + FollowedBy(post_word))
FEhE_clause << (FEhE_pre + FEhE_post)
FEhE_no_SA_handling << (pre_clause + FEhE + post_clause)
FEhE_post << (post_clause)
FEhE_pre << (pre_clause + FEhE + Optional(spaces))
FEhU << (FollowedBy(cmavo) + f + e + h + u + FollowedBy(post_word))
FEhU_clause << (FEhU_pre + FEhU_post)
FEhU_no_SA_handling << (pre_clause + FEhU + post_clause)
FEhU_post << (post_clause)
FEhU_pre << (pre_clause + FEhU + Optional(spaces))
FIhO << (FollowedBy(cmavo) + f + i + h + o + FollowedBy(post_word))
FIhO_clause << (FIhO_pre + FIhO_post)
FIhO_no_SA_handling << (pre_clause + FIhO + post_clause)
FIhO_post << (post_clause)
FIhO_pre << (pre_clause + FIhO + Optional(spaces))
FOI << (FollowedBy(cmavo) + f + o + i + FollowedBy(post_word))
FOI_clause << (FOI_pre + FOI_post)
FOI_no_SA_handling << (pre_clause + FOI + post_clause)
FOI_post << (post_clause)
FOI_pre << (pre_clause + FOI + Optional(spaces))
FUhA << (FollowedBy(cmavo) + f + u + h + a + FollowedBy(post_word))
FUhA_clause << (FUhA_pre + FUhA_post)
FUhA_no_SA_handling << (pre_clause + FUhA + post_clause)
FUhA_post << (post_clause)
FUhA_pre << (pre_clause + FUhA + Optional(spaces))
FUhE << (FollowedBy(cmavo) + f + u + h + e + FollowedBy(post_word))
FUhE_clause << (FUhE_pre + FUhE_post)
FUhE_no_SA_handling << (pre_clause + FUhE + post_clause)
FUhE_post << (~BU_clause + Optional(spaces) + ~ZEI_clause + ~BU_clause)
FUhE_pre << (pre_clause + FUhE + Optional(spaces))
FUhO << (FollowedBy(cmavo) + f + u + h + o + FollowedBy(post_word))
FUhO_clause << (FUhO_pre + FUhO_post)
FUhO_no_SA_handling << (pre_clause + FUhO + post_clause)
FUhO_post << (post_clause)
FUhO_pre << (pre_clause + FUhO + Optional(spaces))
GA << (FollowedBy(cmavo) + g + e + h + (i | g + (e | g + (o | g + (a | g + u)))) + FollowedBy(post_word))
GA_clause << (GA_pre + GA_post)
GA_no_SA_handling << (pre_clause + GA + post_clause)
GA_post << (post_clause)
GA_pre << (pre_clause + GA + Optional(spaces))
GAhO << (FollowedBy(cmavo) + k + e + h + (i | g + a + h + o) + FollowedBy(post_word))
GAhO_clause << (GAhO_pre + GAhO_post)
GAhO_no_SA_handling << (pre_clause + GAhO + post_clause)
GAhO_post << (post_clause)
GAhO_pre << (pre_clause + GAhO + Optional(spaces))
GEhU << (FollowedBy(cmavo) + g + e + h + u + FollowedBy(post_word))
GEhU_clause << (GEhU_pre + GEhU_post)
GEhU_no_SA_handling << (pre_clause + GEhU + post_clause)
GEhU_post << (post_clause)
GEhU_pre << (pre_clause + GEhU + Optional(spaces))
GI << (FollowedBy(cmavo) + g + i + FollowedBy(post_word))
GI_clause << (GI_pre + GI_post)
GI_no_SA_handling << (pre_clause + GI + post_clause)
GI_post << (post_clause)
GI_pre << (pre_clause + GI + Optional(spaces))
GIhA << (FollowedBy(cmavo) + g + i + h + (e | g + i + h + (i | g + i + h + (o | g + i + h + (a | g + i + h + u)))) + FollowedBy(post_word))
GIhA_clause << (GIhA_pre + GIhA_post)
GIhA_no_SA_handling << (pre_clause + GIhA + post_clause)
GIhA_post << (post_clause)
GIhA_pre << (pre_clause + GIhA + Optional(spaces))
GOI << (FollowedBy(cmavo) + n + o + h + (u | n + (e | g + o + (i | p + o + h + (u | p + (e | p + o + h + (e | p + o)))))) + FollowedBy(post_word))
GOI_clause << (GOI_pre + GOI_post)
GOI_no_SA_handling << (pre_clause + GOI + post_clause)
GOI_post << (post_clause)
GOI_pre << (pre_clause + GOI + Optional(spaces))
GOhA << (FollowedBy(cmavo) + m + (o | n + e + (i | g + o + h + (u | g + o + h + (o | g + o + h + (i | n + o + h + (a | g + o + h + (e | g + o + h + (a | d + (u | b + u + h + (a | b + u + h + (e | b + u + h + (i | c + o + h + e)))))))))))) + FollowedBy(post_word))
GOhA_clause << (GOhA_pre + GOhA_post)
GOhA_no_SA_handling << (pre_clause + GOhA + post_clause)
GOhA_post << (post_clause)
GOhA_pre << (pre_clause + GOhA + Optional(spaces))
GUhA << (FollowedBy(cmavo) + g + u + h + (e | g + u + h + (i | g + u + h + (o | g + u + h + (a | g + u + h + u)))) + FollowedBy(post_word))
GUhA_clause << (GUhA_pre + GUhA_post)
GUhA_no_SA_handling << (pre_clause + GUhA + post_clause)
GUhA_post << (post_clause)
GUhA_pre << (pre_clause + GUhA + Optional(spaces))
I << (FollowedBy(cmavo) + i + FollowedBy(post_word))
I_clause << (ZeroOrMore(sentence_sa) + I_pre + I_post)
I_no_SA_handling << (pre_clause + I + post_clause)
I_post << (post_clause)
I_pre << (pre_clause + I + Optional(spaces))
JA << (FollowedBy(cmavo) + j + e + h + (i | j + (e | j + (o | j + (a | j + u)))) + FollowedBy(post_word))
JA_clause << (JA_pre + JA_post)
JA_no_SA_handling << (pre_clause + JA + post_clause)
JA_post << (post_clause)
JA_pre << (pre_clause + JA + Optional(spaces))
JAI << (FollowedBy(cmavo) + j + a + i + FollowedBy(post_word))
JAI_clause << (JAI_pre + JAI_post)
JAI_no_SA_handling << (pre_clause + JAI + post_clause)
JAI_post << (post_clause)
JAI_pre << (pre_clause + JAI + Optional(spaces))
JOI << (FollowedBy(cmavo) + f + a + h + (u | p + i + h + (u | j + o + (i | c + e + h + (o | c + (e | j + o + h + (u | k + u + h + (a | j + o + h + (e | j + u + h + e)))))))) + FollowedBy(post_word))
JOI_clause << (JOI_pre + JOI_post)
JOI_no_SA_handling << (pre_clause + JOI + post_clause)
JOI_post << (post_clause)
JOI_pre << (pre_clause + JOI + Optional(spaces))
JOhI << (FollowedBy(cmavo) + j + o + h + i + FollowedBy(post_word))
JOhI_clause << (JOhI_pre + JOhI_post)
JOhI_no_SA_handling << (pre_clause + JOhI + post_clause)
JOhI_post << (post_clause)
JOhI_pre << (pre_clause + JOhI + Optional(spaces))
KE << (FollowedBy(cmavo) + k + e + FollowedBy(post_word))
KE_clause << (KE_pre + KE_post)
KE_no_SA_handling << (pre_clause + KE + post_clause)
KE_post << (post_clause)
KE_pre << (pre_clause + KE + Optional(spaces))
KEI << (FollowedBy(cmavo) + k + e + i + FollowedBy(post_word))
KEI_clause << (KEI_pre + KEI_post)
KEI_no_SA_handling << (pre_clause + KEI + post_clause)
KEI_post << (post_clause)
KEI_pre << (pre_clause + KEI + Optional(spaces))
KEhE << (FollowedBy(cmavo) + k + e + h + e + FollowedBy(post_word))
KEhE_clause << (KEhE_pre + KEhE_post)
KEhE_no_SA_handling << (pre_clause + KEhE + post_clause)
KEhE_post << (post_clause)
KEhE_pre << (pre_clause + KEhE + Optional(spaces))
KI << (FollowedBy(cmavo) + k + i + FollowedBy(post_word))
KI_clause << (KI_pre + KI_post)
KI_no_SA_handling << (pre_clause + KI + post_clause)
KI_post << (post_clause)
KI_pre << (pre_clause + KI + Optional(spaces))
KOhA << (FollowedBy(cmavo) + d + a + h + (u | d + a + h + (e | d + i + h + (u | d + i + h + (e | d + e + h + (u | d + e + h + (e | d + e + (i | d + o + h + (i | m + i + h + (o | m + a + h + (a | m + i + h + (a | d + o + h + (o | k + o + h + (a | f + o + h + (u | k + o + h + (e | k + o + h + (i | k + o + h + (o | k + o + h + (u | f + o + h + (a | f + o + h + (e | f + o + h + (i | f + o + h + (o | v + o + h + (a | v + o + h + (e | v + o + h + (i | v + o + h + (o | v + o + h + (u | r + (u | r + (i | r + (a | t + (a | t + (u | t + (i | z + i + h + (o | k + e + h + (a | m + (a | z + u + h + (i | z + o + h + (e | c + e + h + (u | d + (a | d + (e | d + (i | k + (o | m + (i | d + o)))))))))))))))))))))))))))))))))))))))))))) + FollowedBy(post_word))
KOhA_clause << (KOhA_pre + KOhA_post)
KOhA_no_SA_handling << (pre_clause + KOhA + Optional(spaces))
KOhA_post << (post_clause)
KOhA_pre << (pre_clause + KOhA + Optional(spaces))
KU << (FollowedBy(cmavo) + k + u + FollowedBy(post_word))
KU_clause << (KU_pre + KU_post)
KU_no_SA_handling << (pre_clause + KU + post_clause)
KU_post << (post_clause)
KU_pre << (pre_clause + KU + Optional(spaces))
KUhE << (FollowedBy(cmavo) + k + u + h + e + FollowedBy(post_word))
KUhE_clause << (KUhE_pre + KUhE_post)
KUhE_no_SA_handling << (pre_clause + KUhE + post_clause)
KUhE_post << (post_clause)
KUhE_pre << (pre_clause + KUhE + Optional(spaces))
KUhO << (FollowedBy(cmavo) + k + u + h + o + FollowedBy(post_word))
KUhO_clause << (KUhO_pre + KUhO_post)
KUhO_no_SA_handling << (pre_clause + KUhO + post_clause)
KUhO_post << (post_clause)
KUhO_pre << (pre_clause + KUhO + Optional(spaces))
LA << (FollowedBy(cmavo) + l + a + (i | l + a + h + (i | l + a)) + FollowedBy(post_word))
LA_clause << (LA_pre + LA_post)
LA_no_SA_handling << (pre_clause + LA + post_clause)
LA_post << (post_clause)
LA_pre << (pre_clause + LA + Optional(spaces))
LAU << (FollowedBy(cmavo) + c + e + h + (a | l + a + (u | z + a + (i | t + a + u))) + FollowedBy(post_word))
LAU_clause << (LAU_pre + LAU_post)
LAU_no_SA_handling << (pre_clause + LAU + post_clause)
LAU_post << (post_clause)
LAU_pre << (pre_clause + LAU + Optional(spaces))
LAhE << (FollowedBy(cmavo) + t + u + h + (a | l + u + h + (a | l + u + h + (o | l + a + h + (e | v + u + h + (i | l + u + h + (i | l + u + h + e)))))) + FollowedBy(post_word))
LAhE_clause << (LAhE_pre + LAhE_post)
LAhE_no_SA_handling << (pre_clause + LAhE + post_clause)
LAhE_post << (post_clause)
LAhE_pre << (pre_clause + LAhE + Optional(spaces))
LE << (FollowedBy(cmavo) + l + e + (i | l + o + (i | l + e + h + (i | l + o + h + (i | l + e + h + (e | l + o + h + (e | l + (o | l + e))))))) + FollowedBy(post_word))
LE_clause << (LE_pre + LE_post)
LE_no_SA_handling << (pre_clause + LE + post_clause)
LE_post << (post_clause)
LE_pre << (pre_clause + LE + Optional(spaces))
LEhU << (FollowedBy(cmavo) + l + e + h + u + FollowedBy(post_word))
LEhU_clause << (LEhU_pre + LEhU_post)
LEhU_clause_no_SA << (LEhU_pre_no_SA + LEhU_post)
LEhU_no_SA_handling << (pre_clause + LEhU + post_clause)
LEhU_post << (Optional(spaces))
LEhU_pre << (pre_clause + LEhU + Optional(spaces))
LEhU_pre_no_SA << (pre_clause + LEhU + Optional(spaces))
LI << (FollowedBy(cmavo) + m + e + h + (o | l + i) + FollowedBy(post_word))
LI_clause << (LI_pre + LI_post)
LI_no_SA_handling << (pre_clause + LI + post_clause)
LI_post << (post_clause)
LI_pre << (pre_clause + LI + Optional(spaces))
LIhU << (FollowedBy(cmavo) + l + i + h + u + FollowedBy(post_word))
LIhU_clause << (LIhU_pre + LIhU_post)
LIhU_no_SA_handling << (pre_clause + LIhU + post_clause)
LIhU_post << (post_clause)
LIhU_pre << (pre_clause + LIhU + Optional(spaces))
LOhO << (FollowedBy(cmavo) + l + o + h + o + FollowedBy(post_word))
LOhO_clause << (LOhO_pre + LOhO_post)
LOhO_no_SA_handling << (pre_clause + LOhO + post_clause)
LOhO_post << (post_clause)
LOhO_pre << (pre_clause + LOhO + Optional(spaces))
LOhU << (FollowedBy(cmavo) + l + o + h + u + FollowedBy(post_word))
LOhU_clause << (LOhU_pre + LOhU_post)
LOhU_no_SA_handling << (pre_clause + LOhU + Optional(spaces) + ZeroOrMore(~LEhU + any_word) + LEhU_clause + Optional(spaces))
LOhU_post << (post_clause)
LOhU_pre << (pre_clause + LOhU + Optional(spaces) + ZeroOrMore(~LEhU + any_word) + LEhU_clause + Optional(spaces))
LU << (FollowedBy(cmavo) + l + u + FollowedBy(post_word))
LU_clause << (LU_pre + LU_post)
LU_no_SA_handling << (pre_clause + LU + post_clause)
LU_post << (post_clause)
LU_pre << (pre_clause + LU + Optional(spaces))
LUhU << (FollowedBy(cmavo) + l + u + h + u + FollowedBy(post_word))
LUhU_clause << (LUhU_pre + LUhU_post)
LUhU_no_SA_handling << (pre_clause + LUhU + post_clause)
LUhU_post << (post_clause)
LUhU_pre << (pre_clause + LUhU + Optional(spaces))
MAI << (FollowedBy(cmavo) + m + o + h + (o | m + a + i) + FollowedBy(post_word))
MAI_clause << (MAI_pre + MAI_post)
MAI_no_SA_handling << (pre_clause + MAI + post_clause)
MAI_post << (post_clause)
MAI_pre << (pre_clause + MAI + Optional(spaces))
MAhO << (FollowedBy(cmavo) + m + a + h + o + FollowedBy(post_word))
MAhO_clause << (MAhO_pre + MAhO_post)
MAhO_no_SA_handling << (pre_clause + MAhO + post_clause)
MAhO_post << (post_clause)
MAhO_pre << (pre_clause + MAhO + Optional(spaces))
ME << (FollowedBy(cmavo) + m + e + FollowedBy(post_word))
ME_clause << (ME_pre + ME_post)
ME_no_SA_handling << (pre_clause + ME + post_clause)
ME_post << (post_clause)
ME_pre << (pre_clause + ME + Optional(spaces))
MEhU << (FollowedBy(cmavo) + m + e + h + u + FollowedBy(post_word))
MEhU_clause << (MEhU_pre + MEhU_post)
MEhU_no_SA_handling << (pre_clause + MEhU + post_clause)
MEhU_post << (post_clause)
MEhU_pre << (pre_clause + MEhU + Optional(spaces))
MOI << (FollowedBy(cmavo) + m + e + (i | m + o + (i | s + i + h + (e | c + u + h + (o | v + a + h + e)))) + FollowedBy(post_word))
MOI_clause << (MOI_pre + MOI_post)
MOI_no_SA_handling << (pre_clause + MOI + post_clause)
MOI_post << (post_clause)
MOI_pre << (pre_clause + MOI + Optional(spaces))
MOhE << (FollowedBy(cmavo) + m + o + h + e + FollowedBy(post_word))
MOhE_clause << (MOhE_pre + MOhE_post)
MOhE_no_SA_handling << (pre_clause + MOhE + post_clause)
MOhE_post << (post_clause)
MOhE_pre << (pre_clause + MOhE + Optional(spaces))
MOhI << (FollowedBy(cmavo) + m + o + h + i + FollowedBy(post_word))
MOhI_clause << (MOhI_pre + MOhI_post)
MOhI_no_SA_handling << (pre_clause + MOhI + post_clause)
MOhI_post << (post_clause)
MOhI_pre << (pre_clause + MOhI + Optional(spaces))
NA << (FollowedBy(cmavo) + j + a + h + (a | n + a) + FollowedBy(post_word))
NA_clause << (NA_pre + NA_post)
NA_no_SA_handling << (pre_clause + NA + post_clause)
NA_post << (post_clause)
NA_pre << (pre_clause + NA + Optional(spaces))
NAI << (FollowedBy(cmavo) + n + a + i + FollowedBy(post_word))
NAI_clause << (NAI_pre + NAI_post)
NAI_no_SA_handling << (pre_clause + NAI + post_clause)
NAI_post << (post_clause)
NAI_pre << (pre_clause + NAI + Optional(spaces))
NAhE << (FollowedBy(cmavo) + t + o + h + (e | j + e + h + (a | n + a + h + (e | n + o + h + e))) + FollowedBy(post_word))
NAhE_clause << (NAhE_pre + NAhE_post)
NAhE_no_SA_handling << (pre_clause + NAhE + post_clause)
NAhE_post << (post_clause)
NAhE_pre << (pre_clause + NAhE + Optional(spaces))
NAhU << (FollowedBy(cmavo) + n + a + h + u + FollowedBy(post_word))
NAhU_clause << (NAhU_pre + NAhU_post)
NAhU_no_SA_handling << (pre_clause + NAhU + post_clause)
NAhU_post << (post_clause)
NAhU_pre << (pre_clause + NAhU + Optional(spaces))
NIhE << (FollowedBy(cmavo) + n + i + h + e + FollowedBy(post_word))
NIhE_clause << (NIhE_pre + NIhE_post)
NIhE_no_SA_handling << (pre_clause + NIhE + post_clause)
NIhE_post << (post_clause)
NIhE_pre << (pre_clause + NIhE + Optional(spaces))
NIhO << (FollowedBy(cmavo) + n + i + h + (o | n + o + h + i) + FollowedBy(post_word))
NIhO_clause << (ZeroOrMore(sentence_sa) + NIhO_pre + NIhO_post)
NIhO_no_SA_handling << (pre_clause + NIhO + ZeroOrMore(su_clause) + post_clause)
NIhO_post << (ZeroOrMore(su_clause) + post_clause)
NIhO_pre << (pre_clause + NIhO + Optional(spaces))
NOI << (FollowedBy(cmavo) + v + o + (i | n + o + (i | p + o + i)) + FollowedBy(post_word))
NOI_clause << (NOI_pre + NOI_post)
NOI_no_SA_handling << (pre_clause + NOI + post_clause)
NOI_post << (post_clause)
NOI_pre << (pre_clause + NOI + Optional(spaces))
NU << (FollowedBy(cmavo) + n + (i | d + u + h + (u | s + i + h + (o | n + (u | l + i + h + (i | k + (a | j + e + (i | s + u + h + (u | z + u + h + (o | m + u + h + (e | p + u + h + (u | z + a + h + i))))))))))) + FollowedBy(post_word))
NU_clause << (NU_pre + NU_post)
NU_no_SA_handling << (pre_clause + NU + post_clause)
NU_post << (post_clause)
NU_pre << (pre_clause + NU + Optional(spaces))
NUhA << (FollowedBy(cmavo) + n + u + h + a + FollowedBy(post_word))
NUhA_clause << (NUhA_pre + NUhA_post)
NUhA_no_SA_handling << (pre_clause + NUhA + post_clause)
NUhA_post << (post_clause)
NUhA_pre << (pre_clause + NUhA + Optional(spaces))
NUhI << (FollowedBy(cmavo) + n + u + h + i + FollowedBy(post_word))
NUhI_clause << (NUhI_pre + NUhI_post)
NUhI_no_SA_handling << (pre_clause + NUhI + post_clause)
NUhI_post << (post_clause)
NUhI_pre << (pre_clause + NUhI + Optional(spaces))
NUhU << (FollowedBy(cmavo) + n + u + h + u + FollowedBy(post_word))
NUhU_clause << (NUhU_pre + NUhU_post)
NUhU_no_SA_handling << (pre_clause + NUhU + post_clause)
NUhU_post << (post_clause)
NUhU_pre << (pre_clause + NUhU + Optional(spaces))
PA << (FollowedBy(cmavo) + d + a + (u | f + e + (i | g + a + (i | j + a + (u | r + e + (i | v + a + (i | p + i + h + (e | p + (i | f + i + h + (u | z + a + h + (u | m + e + h + (i | n + i + h + (u | k + i + h + (o | c + e + h + (i | m + a + h + (u | r + a + h + (e | d + a + h + (a | s + o + h + (a | j + i + h + (i | s + u + h + (o | s + u + h + (e | r + (o | r + a + (u | s + o + h + (u | s + o + h + (i | s + o + h + (e | s + o + h + (o | m + o + h + (a | d + u + h + (e | t + e + h + (o | k + a + h + (o | c + i + h + (i | t + u + h + (o | x + (o | p + a + (i | n + o + h + (o | n + (o | p + (a | r + (e | c + (i | v + (o | m + (u | x + (a | z + (e | b + (i | s + (o | digit)))))))))))))))))))))))))))))))))))))))))))))) + FollowedBy(post_word))
PA_clause << (PA_pre + PA_post)
PA_no_SA_handling << (pre_clause + PA + post_clause)
PA_post << (post_clause)
PA_pre << (pre_clause + PA + Optional(spaces))
PEhE << (FollowedBy(cmavo) + p + e + h + e + FollowedBy(post_word))
PEhE_clause << (PEhE_pre + PEhE_post)
PEhE_no_SA_handling << (pre_clause + PEhE + post_clause)
PEhE_post << (post_clause)
PEhE_pre << (pre_clause + PEhE + Optional(spaces))
PEhO << (FollowedBy(cmavo) + p + e + h + o + FollowedBy(post_word))
PEhO_clause << (PEhO_pre + PEhO_post)
PEhO_no_SA_handling << (pre_clause + PEhO + post_clause)
PEhO_post << (post_clause)
PEhO_pre << (pre_clause + PEhO + Optional(spaces))
PU << (FollowedBy(cmavo) + b + (a | p + (u | c + a)) + FollowedBy(post_word))
PU_clause << (PU_pre + PU_post)
PU_no_SA_handling << (pre_clause + PU + post_clause)
PU_post << (post_clause)
PU_pre << (pre_clause + PU + Optional(spaces))
RAhO << (FollowedBy(cmavo) + r + a + h + o + FollowedBy(post_word))
RAhO_clause << (RAhO_pre + RAhO_post)
RAhO_no_SA_handling << (pre_clause + RAhO + post_clause)
RAhO_post << (post_clause)
RAhO_pre << (pre_clause + RAhO + Optional(spaces))
ROI << (FollowedBy(cmavo) + r + e + h + (u | r + o + i) + FollowedBy(post_word))
ROI_clause << (ROI_pre + ROI_post)
ROI_no_SA_handling << (pre_clause + ROI + post_clause)
ROI_post << (post_clause)
ROI_pre << (pre_clause + ROI + Optional(spaces))
SA << (FollowedBy(cmavo) + s + a + FollowedBy(post_word))
SA_clause << (SA_pre + SA_post)
SA_post << (Optional(spaces))
SA_pre << (pre_clause + SA + Optional(spaces))
SE << (FollowedBy(cmavo) + s + (e | t + (e | v + (e | x + e))) + FollowedBy(post_word))
SE_clause << (SE_pre + SE_post)
SE_no_SA_handling << (pre_clause + SE + post_clause)
SE_post << (post_clause)
SE_pre << (pre_clause + SE + Optional(spaces))
SEI << (FollowedBy(cmavo) + s + e + (i | t + i + h + o) + FollowedBy(post_word))
SEI_clause << (SEI_pre + SEI_post)
SEI_no_SA_handling << (pre_clause + SEI + post_clause)
SEI_post << (post_clause)
SEI_pre << (pre_clause + SEI + Optional(spaces))
SEhU << (FollowedBy(cmavo) + s + e + h + u + FollowedBy(post_word))
SEhU_clause << (SEhU_pre + SEhU_post)
SEhU_no_SA_handling << (pre_clause + SEhU + post_clause)
SEhU_post << (post_clause)
SEhU_pre << (pre_clause + SEhU + Optional(spaces))
SI << (FollowedBy(cmavo) + s + i + FollowedBy(post_word))
SI_clause << (Optional(spaces) + SI + Optional(spaces))
SOI << (FollowedBy(cmavo) + s + o + i + FollowedBy(post_word))
SOI_clause << (SOI_pre + SOI_post)
SOI_no_SA_handling << (pre_clause + SOI + post_clause)
SOI_post << (post_clause)
SOI_pre << (pre_clause + SOI + Optional(spaces))
SU << (FollowedBy(cmavo) + s + u + FollowedBy(post_word))
SU_clause << (SU_pre + SU_post)
SU_post << (post_clause)
SU_pre << (pre_clause + SU + Optional(spaces))
TAhE << (FollowedBy(cmavo) + r + u + h + (i | t + a + h + (e | d + i + h + (i | n + a + h + o))) + FollowedBy(post_word))
TAhE_clause << (TAhE_pre + TAhE_post)
TAhE_no_SA_handling << (pre_clause + TAhE + post_clause)
TAhE_post << (post_clause)
TAhE_pre << (pre_clause + TAhE + Optional(spaces))
TEI << (FollowedBy(cmavo) + t + e + i + FollowedBy(post_word))
TEI_clause << (TEI_pre + TEI_post)
TEI_no_SA_handling << (pre_clause + TEI + post_clause)
TEI_post << (post_clause)
TEI_pre << (pre_clause + TEI + Optional(spaces))
TEhU << (FollowedBy(cmavo) + t + e + h + u + FollowedBy(post_word))
TEhU_clause << (TEhU_pre + TEhU_post)
TEhU_no_SA_handling << (pre_clause + TEhU + post_clause)
TEhU_post << (post_clause)
TEhU_pre << (pre_clause + TEhU + Optional(spaces))
TO << (FollowedBy(cmavo) + t + o + h + (i | t + o) + FollowedBy(post_word))
TO_clause << (TO_pre + TO_post)
TO_no_SA_handling << (pre_clause + TO + post_clause)
TO_post << (post_clause)
TO_pre << (pre_clause + TO + Optional(spaces))
TOI << (FollowedBy(cmavo) + t + o + i + FollowedBy(post_word))
TOI_clause << (TOI_pre + TOI_post)
TOI_no_SA_handling << (pre_clause + TOI + post_clause)
TOI_post << (post_clause)
TOI_pre << (pre_clause + TOI + Optional(spaces))
TUhE << (FollowedBy(cmavo) + t + u + h + e + FollowedBy(post_word))
TUhE_clause << (TUhE_pre + TUhE_post)
TUhE_no_SA_handling << (pre_clause + TUhE + ZeroOrMore(su_clause) + post_clause)
TUhE_post << (ZeroOrMore(su_clause) + post_clause)
TUhE_pre << (pre_clause + TUhE + Optional(spaces))
TUhU << (FollowedBy(cmavo) + t + u + h + u + FollowedBy(post_word))
TUhU_clause << (TUhU_pre + TUhU_post)
TUhU_no_SA_handling << (pre_clause + TUhU + post_clause)
TUhU_post << (post_clause)
TUhU_pre << (pre_clause + TUhU + Optional(spaces))
UI << (FollowedBy(cmavo) + i + h + (a | i + (e | a + h + (e | u + h + (i | i + h + (o | i + h + (e | a + h + (a | i + (a | o + h + (i | o + h + (e | e + h + (e | o + (i | u + (o | e + h + (i | u + h + (o | a + (u | u + (a | a + h + (i | i + h + (u | i + (i | u + h + (a | u + (i | a + h + (o | a + (i | a + h + (u | i + (u | e + (i | o + h + (o | e + h + (a | u + (u | o + h + (a | o + h + (u | u + h + (u | e + h + (o | i + (o | e + h + (u | u + (e | i + h + (i | u + h + (e | b + a + h + (a | j + a + h + (o | c + a + h + (e | s + u + h + (a | t + i + h + (e | k + a + h + (u | s + e + h + (o | z + a + h + (a | p + e + h + (i | r + u + h + (a | j + u + h + (a | t + a + h + (o | r + a + h + (u | l + i + h + (a | b + a + h + (u | m + u + h + (a | d + o + h + (a | t + o + h + (u | v + a + h + (i | p + a + h + (e | z + u + h + (u | s + a + h + (e | l + a + h + (a | k + e + h + (u | s + a + h + (u | d + a + h + (i | j + e + h + (u | s + a + h + (a | k + a + (u | t + a + h + (u | n + a + h + (i | j + o + h + (a | b + i + h + (u | l + i + h + (o | p + a + (u | m + i + h + (u | k + u + h + (i | j + i + h + (a | s + i + h + (a | p + o + h + (o | p + e + h + (a | r + o + h + (i | r + o + h + (e | r + o + h + (o | r + o + h + (u | r + o + h + (a | r + e + h + (e | l + e + h + (o | j + u + h + (o | f + u + h + (i | d + a + (i | g + a + h + (i | z + o + h + (o | b + e + h + (u | r + i + h + (e | s + e + h + (i | s + e + h + (a | v + u + h + (e | k + i + h + (a | x + (u | g + e + h + (e | b + u + h + o)))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))) + FollowedBy(post_word))
UI_clause << (UI_pre + UI_post)
UI_no_SA_handling << (pre_clause + UI + post_clause)
UI_post << (post_clause)
UI_pre << (pre_clause + UI + Optional(spaces))
VA << (FollowedBy(cmavo) + v + (i | v + (a | v + u)) + FollowedBy(post_word))
VA_clause << (VA_pre + VA_post)
VA_no_SA_handling << (pre_clause + VA + post_clause)
VA_post << (post_clause)
VA_pre << (pre_clause + VA + Optional(spaces))
VAU << (FollowedBy(cmavo) + v + a + u + FollowedBy(post_word))
VAU_clause << (VAU_pre + VAU_post)
VAU_no_SA_handling << (pre_clause + VAU + post_clause)
VAU_post << (post_clause)
VAU_pre << (pre_clause + VAU + Optional(spaces))
VEI << (FollowedBy(cmavo) + v + e + i + FollowedBy(post_word))
VEI_clause << (VEI_pre + VEI_post)
VEI_no_SA_handling << (pre_clause + VEI + post_clause)
VEI_post << (post_clause)
VEI_pre << (pre_clause + VEI + Optional(spaces))
VEhA << (FollowedBy(cmavo) + v + e + h + (u | v + e + h + (a | v + e + h + (i | v + e + h + e))) + FollowedBy(post_word))
VEhA_clause << (VEhA_pre + VEhA_post)
VEhA_no_SA_handling << (pre_clause + VEhA + post_clause)
VEhA_post << (post_clause)
VEhA_pre << (pre_clause + VEhA + Optional(spaces))
VEhO << (FollowedBy(cmavo) + v + e + h + o + FollowedBy(post_word))
VEhO_clause << (VEhO_pre + VEhO_post)
VEhO_no_SA_handling << (pre_clause + VEhO + post_clause)
VEhO_post << (post_clause)
VEhO_pre << (pre_clause + VEhO + Optional(spaces))
VIhA << (FollowedBy(cmavo) + v + i + h + (i | v + i + h + (a | v + i + h + (u | v + i + h + e))) + FollowedBy(post_word))
VIhA_clause << (VIhA_pre + VIhA_post)
VIhA_no_SA_handling << (pre_clause + VIhA + post_clause)
VIhA_post << (post_clause)
VIhA_pre << (pre_clause + VIhA + Optional(spaces))
VUhO << (FollowedBy(cmavo) + v + u + h + o + FollowedBy(post_word))
VUhO_clause << (VUhO_pre + VUhO_post)
VUhO_no_SA_handling << (pre_clause + VUhO + post_clause)
VUhO_post << (post_clause)
VUhO_pre << (pre_clause + VUhO + Optional(spaces))
VUhU << (FollowedBy(cmavo) + g + e + h + (a | f + u + h + (u | p + i + h + (i | f + e + h + (i | v + u + h + (u | s + u + h + (i | j + u + h + (u | g + e + (i | p + a + h + (i | f + a + h + (i | t + e + h + (a | c + u + h + (a | v + a + h + (a | n + e + h + (o | d + e + h + (o | f + e + h + (a | s + a + h + (o | r + e + h + (a | r + i + h + (o | s + a + h + (i | p + i + h + (a | s + i + h + i))))))))))))))))))))) + FollowedBy(post_word))
VUhU_clause << (VUhU_pre + VUhU_post)
VUhU_no_SA_handling << (pre_clause + VUhU + post_clause)
VUhU_post << (post_clause)
VUhU_pre << (pre_clause + VUhU + Optional(spaces))
XI << (FollowedBy(cmavo) + x + i + FollowedBy(post_word))
XI_clause << (XI_pre + XI_post)
XI_no_SA_handling << (pre_clause + XI + post_clause)
XI_post << (post_clause)
XI_pre << (pre_clause + XI + Optional(spaces))
Y << (FollowedBy(cmavo) + OneOrMore(y) + FollowedBy(post_word))
ZAhO << (FollowedBy(cmavo) + c + o + h + (i | p + u + h + (o | c + o + h + (u | m + o + h + (u | c + a + h + (o | c + o + h + (a | d + e + h + (a | b + a + h + (o | d + i + h + (a | z + a + h + o))))))))) + FollowedBy(post_word))
ZAhO_clause << (ZAhO_pre + ZAhO_post)
ZAhO_no_SA_handling << (pre_clause + ZAhO + post_clause)
ZAhO_post << (post_clause)
ZAhO_pre << (pre_clause + ZAhO + Optional(spaces))
ZEI << (FollowedBy(cmavo) + z + e + i + FollowedBy(post_word))
ZEI_clause << (ZEI_pre + ZEI_post)
ZEI_clause_no_SA << (ZEI_pre_no_SA + ZEI + ZEI_post)
ZEI_no_SA_handling << (pre_clause + ZEI + post_clause)
ZEI_post << (Optional(spaces))
ZEI_pre << (pre_clause + ZEI + Optional(spaces))
ZEI_pre_no_SA << (pre_clause)
ZEhA << (FollowedBy(cmavo) + z + e + h + (u | z + e + h + (a | z + e + h + (i | z + e + h + e))) + FollowedBy(post_word))
ZEhA_clause << (ZEhA_pre + ZEhA_post)
ZEhA_no_SA_handling << (pre_clause + ZEhA + post_clause)
ZEhA_post << (post_clause)
ZEhA_pre << (pre_clause + ZEhA + Optional(spaces))
ZI << (FollowedBy(cmavo) + z + (u | z + (a | z + i)) + FollowedBy(post_word))
ZI_clause << (ZI_pre + ZI_post)
ZI_no_SA_handling << (pre_clause + ZI + post_clause)
ZI_post << (post_clause)
ZI_pre << (pre_clause + ZI + Optional(spaces))
ZIhE << (FollowedBy(cmavo) + z + i + h + e + FollowedBy(post_word))
ZIhE_clause << (ZIhE_pre + ZIhE_post)
ZIhE_no_SA_handling << (pre_clause + ZIhE + post_clause)
ZIhE_post << (post_clause)
ZIhE_pre << (pre_clause + ZIhE + Optional(spaces))
ZO << (FollowedBy(cmavo) + z + o + FollowedBy(post_word))
ZO_clause << (ZO_pre + ZO_post)
ZO_no_SA_handling << (pre_clause + ZO + Optional(spaces) + any_word + Optional(spaces))
ZO_post << (post_clause)
ZO_pre << (pre_clause + ZO + Optional(spaces) + any_word + Optional(spaces))
ZOI << (FollowedBy(cmavo) + z + o + (i | l + a + h + o) + FollowedBy(post_word))
ZOI_clause << (ZOI_pre + ZOI_post)
ZOI_no_SA_handling << (pre_clause + ZOI + Optional(spaces) + zoi_open + ZeroOrMore(zoi_word) + zoi_close + Optional(spaces))
ZOI_post << (post_clause)
ZOI_pre << (pre_clause + ZOI + Optional(spaces) + zoi_open + ZeroOrMore(zoi_word) + zoi_close + Optional(spaces))
ZOhU << (FollowedBy(cmavo) + z + o + h + u + FollowedBy(post_word))
ZOhU_clause << (ZOhU_pre + ZOhU_post)
ZOhU_no_SA_handling << (pre_clause + ZOhU + post_clause)
ZOhU_post << (post_clause)
ZOhU_pre << (pre_clause + ZOhU + Optional(spaces))
affricate << (t + (c | t + (s | d + (j | d + z))))
any_extended_rafsi << (fuhivla | extended_rafsi | stressed_extended_rafsi)
any_syllable << (onset + nucleus + (Optional(coda) | consonantal_syllable))
any_word_SA_handling << (BRIVLA_pre | known_cmavo_SA | CMAVO_pre | CMENE_pre)
b << (ZeroOrMore(comma) + Regex('[bB]') + ~h + ~b + ~unvoiced)
bridi_tail << (bridi_tail_1 + Optional(gihek + Optional(stag) + KE_clause + ZeroOrMore(free) + bridi_tail + Optional(KEhE_clause) + ZeroOrMore(free) + tail_terms))
bridi_tail_1 << (bridi_tail_2 + ZeroOrMore(gihek + ~(Optional(stag) + BO_clause) + ~(Optional(stag) + KE_clause) + ZeroOrMore(free) + bridi_tail_2 + tail_terms))
bridi_tail_2 << (bridi_tail_3 + Optional(gihek + Optional(stag) + BO_clause + ZeroOrMore(free) + bridi_tail_2 + tail_terms))
bridi_tail_3 << (selbri + (tail_terms | gek_sentence))
bridi_tail_sa << (bridi_tail_start + ZeroOrMore(term | ~bridi_tail_start + (sa_word | SA_clause + ~bridi_tail_start)) + SA_clause + FollowedBy(bridi_tail))
bridi_tail_start << (ME_clause | NUhA_clause | NU_clause | NA_clause + (~KU_clause | NAhE_clause + (~BO_clause | selbri | tag + (bridi_tail_start | KE_clause + (bridi_tail_start | bridi_tail)))))
brivla << (~cmavo + ZeroOrMore(initial_rafsi) + brivla_core)
brivla_core << (fuhivla | gismu | CVV_final_rafsi | stressed_initial_rafsi + short_final_rafsi)
brivla_head << (~cmavo + ~slinkuhi + ~h + FollowedBy(onset) + ZeroOrMore(unstressed_syllable))
brivla_rafsi << (FollowedBy(syllable + ZeroOrMore(consonantal_syllable) + syllable) + brivla_head + h + y + Optional(h))
bu_clause << (pre_clause + bu_clause_no_pre)
bu_clause_no_SA << (pre_zei_bu_no_SA + ZeroOrMore(Optional(bu_tail) + zei_tail) + bu_tail)
bu_clause_no_pre << (pre_zei_bu + ZeroOrMore(Optional(bu_tail) + zei_tail) + bu_tail + post_clause)
bu_tail << (OneOrMore(BU_clause))
c << (ZeroOrMore(comma) + Regex('[cC]') + ~h + ~c + ~s + ~x + ~voiced)
cehe_sa << (CEhE_clause + ZeroOrMore(~CEhE_clause + (sa_word | SA_clause + ~CEhE_clause)) + SA_clause)
cluster << (consonant + OneOrMore(consonant))
cmavo << (~cmene + ~CVCy_lujvo + cmavo_form + FollowedBy(post_word))
cmavo_form << (~h + ~cluster + onset + ZeroOrMore(nucleus + h) + (~stressed + (nucleus | nucleus + ~cluster) | OneOrMore(y) | digit))
cmene << (~h + FollowedBy(consonant_final) + Optional(coda) + ZeroOrMore(any_syllable | digit) + FollowedBy(pause))
coda << (~any_syllable + consonant + (FollowedBy(any_syllable) | Optional(syllabic) + Optional(consonant) + FollowedBy(pause)))
consonant << (voiced | unvoiced | syllabic)
consonant_final << (ZeroOrMore(non_space + FollowedBy(non_space)) + consonant + FollowedBy(pause))
consonantal_syllable << (consonant + syllabic + FollowedBy(consonantal_syllable | onset) + Optional(consonant + FollowedBy(spaces)))
d << (ZeroOrMore(comma) + Regex('[dD]') + ~h + ~d + ~unvoiced)
digit << (ZeroOrMore(comma) + Regex('[0123456789]') + ~h + ~nucleus)
diphthong << (a + (i | a + (u | e + (i | o + i))) + ~nucleus + ~glide)
ek << (Optional(NA_clause) + Optional(SE_clause) + A_clause + Optional(NAI_clause))
erasable_clause << (bu_clause_no_pre + ~ZEI_clause + (~BU_clause | zei_clause_no_pre + ~ZEI_clause + ~BU_clause))
extended_rafsi << (brivla_rafsi | fuhivla_rafsi)
f << (ZeroOrMore(comma) + Regex('[fF]') + ~h + ~f + ~voiced)
faho_clause << (Optional(FAhO_clause + dot_star))
final_syllable << (onset + ~y + ~stressed + nucleus + ~cmene + FollowedBy(post_word))
fore_operands << (OneOrMore(mex_2))
fragment << (prenex | terms + Optional(VAU_clause) + (ZeroOrMore(free) | ek + (ZeroOrMore(free) | gihek + (ZeroOrMore(free) | quantifier | NA_clause + ~JA_clause + (ZeroOrMore(free) | relative_clauses | links | linkargs)))))
free << (SEI_clause + ZeroOrMore(free) + Optional(terms + Optional(CU_clause) + ZeroOrMore(free)) + selbri + (Optional(SEhU_clause) | SOI_clause + ZeroOrMore(free) + sumti + Optional(sumti) + (Optional(SEhU_clause) | vocative + Optional(relative_clauses) + selbri + Optional(relative_clauses) + (Optional(DOhU_clause) | vocative + Optional(relative_clauses) + OneOrMore(CMENE_clause) + ZeroOrMore(free) + Optional(relative_clauses) + (Optional(DOhU_clause) | vocative + Optional(sumti) + (Optional(DOhU_clause) | (number | lerfu_string) + (MAI_clause | TO_clause + text + (Optional(TOI_clause) | xi_clause))))))))
fuhivla << (fuhivla_head + stressed_syllable + ZeroOrMore(consonantal_syllable) + final_syllable)
fuhivla_head << (~rafsi_string + brivla_head)
fuhivla_rafsi << (FollowedBy(unstressed_syllable) + fuhivla_head + FollowedBy(consonant) + onset + y + Optional(h))
g << (ZeroOrMore(comma) + Regex('[gG]') + ~h + ~g + ~unvoiced)
gek << (Optional(SE_clause) + GA_clause + Optional(NAI_clause) + (ZeroOrMore(free) | joik + GI_clause + (ZeroOrMore(free) | stag + gik)))
gek_sentence << (gek + subsentence + gik + subsentence + (tail_terms | Optional(tag) + KE_clause + ZeroOrMore(free) + gek_sentence + Optional(KEhE_clause) + (ZeroOrMore(free) | NA_clause + ZeroOrMore(free) + gek_sentence)))
gek_termset << (gek + terms_gik_terms)
gihek << (ZeroOrMore(gihek_sa) + gihek_1)
gihek_1 << (Optional(NA_clause) + Optional(SE_clause) + GIhA_clause + Optional(NAI_clause))
gihek_sa << (gihek_1 + ZeroOrMore(~gihek_1 + (sa_word | SA_clause + ~gihek_1)) + SA_clause + FollowedBy(gihek))
gik << (GI_clause + Optional(NAI_clause) + ZeroOrMore(free))
gismu << (stressed_long_rafsi + FollowedBy(final_syllable) + vowel + FollowedBy(post_word))
glide << ((i | u) + FollowedBy(nucleus) + ~glide)
guhek << (Optional(SE_clause) + GUhA_clause + Optional(NAI_clause) + ZeroOrMore(free))
h << (ZeroOrMore(comma) + Regex('['h]') + FollowedBy(nucleus))
indicator << ((UI_clause | CAI_clause) + (Optional(NAI_clause) | DAhO_clause | FUhO_clause) + ~BU_clause)
indicators << (Optional(FUhE_clause) + OneOrMore(indicator))
initial << ((affricate | Optional(sibilant) + Optional(other) + Optional(liquid)) + ~consonant + ~glide)
initial_pair << (FollowedBy(initial) + consonant + consonant + ~consonant)
initial_rafsi << (extended_rafsi | y_rafsi | ~any_extended_rafsi + y_less_rafsi)
initial_spaces << (OneOrMore(ZeroOrMore(comma) + (space_char | ~ybu + Y)) + (Optional(EOF) | EOF))
interval << (Optional(SE_clause) + BIhI_clause + Optional(NAI_clause))
interval_property << (number + ROI_clause + (Optional(NAI_clause) | TAhE_clause + (Optional(NAI_clause) | ZAhO_clause + Optional(NAI_clause))))
intro_null << (Optional(spaces) + ZeroOrMore(su_clause) + intro_si_clause)
intro_si_clause << (Optional(si_clause) + ZeroOrMore(SI_clause))
j << (ZeroOrMore(comma) + Regex('[jJ]') + ~h + ~j + ~z + ~unvoiced)
jek << (Optional(NA_clause) + Optional(SE_clause) + JA_clause + Optional(NAI_clause))
joik << (Optional(SE_clause) + JOI_clause + (Optional(NAI_clause) | interval | GAhO_clause + interval + GAhO_clause))
joik_ek << (ZeroOrMore(joik_ek_sa) + joik_ek_1)
joik_ek_1 << (joik + (ZeroOrMore(free) | ek + ZeroOrMore(free)))
joik_ek_sa << (joik_ek_1 + ZeroOrMore(~joik_ek_1 + (sa_word | SA_clause + ~joik_ek_1)) + SA_clause + FollowedBy(joik_ek))
joik_jek << (joik + (ZeroOrMore(free) | jek + ZeroOrMore(free)))
k << (ZeroOrMore(comma) + Regex('[kK]') + ~h + ~k + ~x + ~voiced)
known_cmavo_SA << (A_pre | BAI_pre | BAhE_pre | BE_pre | BEI_pre | BEhO_pre | BIhE_pre | BIhI_pre | BO_pre | BOI_pre | BU_pre | BY_pre | CAI_pre | CAhA_pre | CEI_pre | CEhE_pre | CO_pre | COI_pre | CU_pre | CUhE_pre | DAhO_pre | DOI_pre | DOhU_pre | FA_pre | FAhA_pre | FEhE_pre | FEhU_pre | FIhO_pre | FOI_pre | FUhA_pre | FUhE_pre | FUhO_pre | GA_pre | GAhO_pre | GEhU_pre | GI_pre | GIhA_pre | GOI_pre | GOhA_pre | GUhA_pre | I_pre | JA_pre | JAI_pre | JOI_pre | JOhI_pre | KE_pre | KEI_pre | KEhE_pre | KI_pre | KOhA_pre | KU_pre | KUhE_pre | KUhO_pre | LA_pre | LAU_pre | LAhE_pre | LE_pre | LEhU_pre | LI_pre | LIhU_pre | LOhO_pre | LOhU_pre | LU_pre | LUhU_pre | MAI_pre | MAhO_pre | ME_pre | MEhU_pre | MOI_pre | MOhE_pre | MOhI_pre | NA_pre | NAI_pre | NAhE_pre | NAhU_pre | NIhE_pre | NIhO_pre | NOI_pre | NU_pre | NUhA_pre | NUhI_pre | NUhU_pre | PA_pre | PEhE_pre | PEhO_pre | PU_pre | RAhO_pre | ROI_pre | SA_pre | SE_pre | SEI_pre | SEhU_pre | SI_clause | SOI_pre | SU_pre | TAhE_pre | TEI_pre | TEhU_pre | TO_pre | TOI_pre | TUhE_pre | TUhU_pre | UI_pre | VA_pre | VAU_pre | VEI_pre | VEhA_pre | VEhO_pre | VIhA_pre | VUhO_pre | VUhU_pre | XI_pre | ZAhO_pre | ZEI_pre | ZEhA_pre | ZI_pre | ZIhE_pre | ZO_pre | ZOI_pre | ZOhU_pre)
l << (ZeroOrMore(comma) + Regex('[lL]') + ~h + ~l)
lerfu_string << (lerfu_word + ZeroOrMore(PA_clause | lerfu_word))
lerfu_word << (BY_clause | LAU_clause + (lerfu_word | TEI_clause + lerfu_string + FOI_clause))
li_clause << (LI_clause + ZeroOrMore(free) + mex + Optional(LOhO_clause) + ZeroOrMore(free))
linkargs << (ZeroOrMore(linkargs_sa) + linkargs_1)
linkargs_1 << (BE_clause + ZeroOrMore(free) + term + Optional(links) + Optional(BEhO_clause) + ZeroOrMore(free))
linkargs_sa << (linkargs_start + ZeroOrMore(~linkargs_start + (sa_word | SA_clause + ~linkargs_start)) + SA_clause + FollowedBy(linkargs_1))
linkargs_start << (BE_clause)
links << (ZeroOrMore(links_sa) + links_1)
links_1 << (BEI_clause + ZeroOrMore(free) + term + Optional(links))
links_sa << (links_start + ZeroOrMore(~links_start + (sa_word | SA_clause + ~links_start)) + SA_clause + FollowedBy(links_1))
links_start << (BEI_clause)
liquid << (l | r)
lojban_word << (cmene | cmavo | brivla)
long_rafsi << ((CCV_rafsi | CVC_rafsi) + consonant)
lujvo << (~gismu + ~fuhivla + brivla)
m << (ZeroOrMore(comma) + Regex('[mM]') + ~h + ~m + ~z)
mex << (ZeroOrMore(mex_sa) + mex_0)
mex_0 << (mex_1 + (ZeroOrMore(operator + mex_1) | rp_clause))
mex_1 << (mex_2 + Optional(BIhE_clause + ZeroOrMore(free) + operator + mex_1))
mex_2 << (operand | mex_forethought)
mex_forethought << (Optional(PEhO_clause) + ZeroOrMore(free) + operator + fore_operands + Optional(KUhE_clause) + ZeroOrMore(free))
mex_operator << (SE_clause + ZeroOrMore(free) + (mex_operator | NAhE_clause + ZeroOrMore(free) + (mex_operator | MAhO_clause + ZeroOrMore(free) + mex + Optional(TEhU_clause) + (ZeroOrMore(free) | NAhU_clause + ZeroOrMore(free) + selbri + Optional(TEhU_clause) + (ZeroOrMore(free) | VUhU_clause + ZeroOrMore(free))))))
mex_sa << (mex_start + ZeroOrMore(~mex_start + (sa_word | SA_clause + ~mex_start)) + SA_clause + FollowedBy(mex_0))
mex_start << (FUhA_clause | PEhO_clause | operand_start)
n << (ZeroOrMore(comma) + Regex('[nN]') + ~h + ~n + ~affricate)
non_lojban_word << (~lojban_word + OneOrMore(non_space))
nucleus << (vowel | diphthong | y + ~nucleus)
number << (PA_clause + ZeroOrMore(PA_clause | lerfu_word))
onset << (h | Optional(consonant) + (glide | initial))
operand << (ZeroOrMore(operand_sa) + operand_0)
operand_0 << (operand_1 + Optional(joik_ek + Optional(stag) + KE_clause + ZeroOrMore(free) + operand + Optional(KEhE_clause) + ZeroOrMore(free)))
operand_1 << (operand_2 + ZeroOrMore(joik_ek + operand_2))
operand_2 << (operand_3 + Optional(joik_ek + Optional(stag) + BO_clause + ZeroOrMore(free) + operand_2))
operand_3 << (quantifier | lerfu_string + ~MOI_clause + Optional(BOI_clause) + (ZeroOrMore(free) | NIhE_clause + ZeroOrMore(free) + selbri + Optional(TEhU_clause) + (ZeroOrMore(free) | MOhE_clause + ZeroOrMore(free) + sumti + Optional(TEhU_clause) + (ZeroOrMore(free) | JOhI_clause + ZeroOrMore(free) + OneOrMore(mex_2) + Optional(TEhU_clause) + (ZeroOrMore(free) | gek + operand + gik + (operand_3 | LAhE_clause + (ZeroOrMore(free) | NAhE_clause + BO_clause + ZeroOrMore(free)) + operand + Optional(LUhU_clause) + ZeroOrMore(free)))))))
operand_sa << (operand_start + ZeroOrMore(~operand_start + (sa_word | SA_clause + ~operand_start)) + SA_clause + FollowedBy(operand_0))
operand_start << (quantifier | lerfu_word | NIhE_clause | MOhE_clause | JOhI_clause | gek | LAhE_clause | NAhE_clause)
operator << (ZeroOrMore(operator_sa) + operator_0)
operator_0 << (operator_1 + ZeroOrMore(joik_jek + (operator_1 | joik + Optional(stag) + KE_clause + ZeroOrMore(free) + operator + Optional(KEhE_clause) + ZeroOrMore(free))))
operator_1 << (operator_2 | guhek + operator_1 + gik + (operator_2 | operator_2 + (jek | joik) + Optional(stag) + BO_clause + ZeroOrMore(free) + operator_1))
operator_2 << (mex_operator | KE_clause + ZeroOrMore(free) + operator + Optional(KEhE_clause) + ZeroOrMore(free))
operator_sa << (operator_start + ZeroOrMore(~operator_start + (sa_word | SA_clause + ~operator_start)) + SA_clause + FollowedBy(operator_0))
operator_start << (guhek | KE_clause | Optional(SE_clause) + (NAhE_clause | Optional(SE_clause) + (MAhO_clause | Optional(SE_clause) + VUhU_clause)))
other << (p | t + (~l | k | f | x | b | d + (~l | g | v | m | n + ~liquid)))
p << (ZeroOrMore(comma) + Regex('[pP]') + ~h + ~p + ~voiced)
paragraph << ((statement | fragment) + ZeroOrMore(I_clause + ~jek + ~joik + ~joik_jek + ZeroOrMore(free) + Optional(statement | fragment)))
paragraphs << (paragraph + Optional(OneOrMore(NIhO_clause) + ZeroOrMore(free) + ZeroOrMore(su_clause) + paragraphs))
pehe_sa << (PEhE_clause + ZeroOrMore(~PEhE_clause + (sa_word | SA_clause + ~PEhE_clause)) + SA_clause)
post_clause << (Optional(spaces) + Optional(si_clause) + ~ZEI_clause + ~BU_clause + ZeroOrMore(indicators))
post_word << (pause | ~nucleus + lojban_word)
pre_clause << (Optional(BAhE_clause))
pre_zei_bu << (~BU_clause + ~ZEI_clause + ~SI_clause + ~SA_clause + ~SU_clause + ~FAhO_clause + any_word_SA_handling + Optional(si_clause))
pre_zei_bu_no_SA << (LOhU_pre | ZO_pre | ZOI_pre | ~ZEI_clause + ~BU_clause + ~FAhO_clause + ~SI_clause + ~SA_clause + ~SU_clause + any_word + Optional(si_clause))
prenex << (terms + ZOhU_clause + ZeroOrMore(free))
quantifier << (number + ~MOI_clause + Optional(BOI_clause) + (ZeroOrMore(free) | VEI_clause + ZeroOrMore(free) + mex + Optional(VEhO_clause) + ZeroOrMore(free)))
r << (ZeroOrMore(comma) + Regex('[rR]') + ~h + ~r)
r_hyphen << (r + (FollowedBy(consonant) | n + FollowedBy(r)))
rafsi_string << (ZeroOrMore(y_less_rafsi) + (gismu | CVV_final_rafsi | stressed_y_less_rafsi + (short_final_rafsi | y_rafsi | stressed_y_rafsi | Optional(stressed_y_less_rafsi) + initial_pair + y)))
relative_clause << (ZeroOrMore(relative_clause_sa) + relative_clause_1)
relative_clause_1 << (GOI_clause + ZeroOrMore(free) + term + Optional(GEhU_clause) + (ZeroOrMore(free) | NOI_clause + ZeroOrMore(free) + subsentence + Optional(KUhO_clause) + ZeroOrMore(free)))
relative_clause_sa << (relative_clause_start + ZeroOrMore(~relative_clause_start + (sa_word | SA_clause + ~relative_clause_start)) + SA_clause + FollowedBy(relative_clause_1))
relative_clause_start << (GOI_clause | NOI_clause)
relative_clauses << (relative_clause + ZeroOrMore(ZIhE_clause + ZeroOrMore(free) + relative_clause))
rp_clause << (FUhA_clause + ZeroOrMore(free) + rp_expression)
rp_expression << (operand + rp_expression_tail)
rp_expression_tail << (Optional(rp_expression + operator + rp_expression_tail))
s << (ZeroOrMore(comma) + Regex('[sS]') + ~h + ~s + ~c + ~voiced)
sa_word << (pre_zei_bu)
selbri << (Optional(tag) + selbri_1)
selbri_1 << (selbri_2 | NA_clause + ZeroOrMore(free) + selbri)
selbri_2 << (selbri_3 + Optional(CO_clause + ZeroOrMore(free) + selbri_2))
selbri_3 << (OneOrMore(selbri_4))
selbri_4 << (selbri_5 + ZeroOrMore(joik_jek + (selbri_5 | joik + Optional(stag) + KE_clause + ZeroOrMore(free) + selbri_3 + Optional(KEhE_clause) + ZeroOrMore(free))))
selbri_5 << (selbri_6 + Optional((jek | joik) + Optional(stag) + BO_clause + ZeroOrMore(free) + selbri_5))
selbri_6 << (tanru_unit + (Optional(BO_clause + ZeroOrMore(free) + selbri_6) | Optional(NAhE_clause) + ZeroOrMore(free) + guhek + selbri + gik + selbri_6))
sentence << (Optional(terms + ZeroOrMore(bridi_tail_sa) + Optional(CU_clause) + ZeroOrMore(free)) + ZeroOrMore(bridi_tail_sa) + bridi_tail)
sentence_sa << (sentence_start + ZeroOrMore(~sentence_start + (sa_word | SA_clause + ~sentence_start)) + SA_clause + FollowedBy(text_1))
sentence_start << (I_pre | NIhO_pre)
short_final_rafsi << (FollowedBy(final_syllable) + consonant + (diphthong | initial_pair + vowel) + FollowedBy(post_word))
si_clause << (OneOrMore((erasable_clause | si_word | SA_clause) + Optional(si_clause) + SI_clause))
si_word << (pre_zei_bu)
sibilant << (c | s + (~x | (j | z) + ~n + ~liquid))
simple_tense_modal << (Optional(NAhE_clause) + Optional(SE_clause) + BAI_clause + Optional(NAI_clause) + (Optional(KI_clause) | Optional(NAhE_clause) + (time + (Optional(space) | space + Optional(time)) + CAhA_clause | time + (Optional(space) | space + Optional(time)) | CAhA_clause) + (Optional(KI_clause) | KI_clause | CUhE_clause)))
slinkuhi << (consonant + rafsi_string)
space << (VA_clause + ZeroOrMore(space_offset) + Optional(space_interval) + (Optional(MOhI_clause + space_offset) | Optional(VA_clause) + OneOrMore(space_offset) + Optional(space_interval) + (Optional(MOhI_clause + space_offset) | Optional(VA_clause) + ZeroOrMore(space_offset) + space_interval + (Optional(MOhI_clause + space_offset) | Optional(VA_clause) + ZeroOrMore(space_offset) + Optional(space_interval) + MOhI_clause + space_offset))))
space_int_props << (OneOrMore(FEhE_clause + interval_property))
space_interval << ((VEhA_clause | VIhA_clause | VEhA_clause + VIhA_clause) + Optional(FAhA_clause + Optional(NAI_clause)) + (space_int_props | (VEhA_clause | VIhA_clause | VEhA_clause + VIhA_clause) + (Optional(FAhA_clause + Optional(NAI_clause)) | space_int_props)))
space_offset << (FAhA_clause + Optional(NAI_clause) + Optional(VA_clause))
spaces << (~Y + initial_spaces)
stag << (simple_tense_modal + (ZeroOrMore((jek | joik) + simple_tense_modal) | tense_modal + ZeroOrMore(joik_jek + tense_modal)))
statement << (statement_1 | prenex + statement)
statement_1 << (statement_2 + ZeroOrMore(I_clause + joik_jek + Optional(statement_2)))
statement_2 << (statement_3 + (Optional(I_clause + Optional(jek | joik) + Optional(stag) + BO_clause + ZeroOrMore(free) + statement_2) | statement_3 + Optional(I_clause + Optional(jek | joik) + Optional(stag) + BO_clause + ZeroOrMore(free))))
statement_3 << (sentence | Optional(tag) + TUhE_clause + ZeroOrMore(free) + text_1 + Optional(TUhU_clause) + ZeroOrMore(free))
stress << (ZeroOrMore(consonant) + Optional(y) + syllable + pause)
stressed << (onset + ZeroOrMore(comma) + Regex('[AEIOU]'))
stressed_CCV_rafsi << (initial_pair + stressed_vowel)
stressed_CVC_rafsi << (consonant + stressed_vowel + consonant)
stressed_CVV_rafsi << (consonant + unstressed_vowel + h + (stressed_vowel | stressed_diphthong) + Optional(r_hyphen))
stressed_brivla_rafsi << (FollowedBy(unstressed_syllable) + brivla_head + stressed_syllable + h + y)
stressed_diphthong << (FollowedBy(stressed) + (diphthong | diphthong + FollowedBy(stress)))
stressed_extended_rafsi << (stressed_brivla_rafsi | stressed_fuhivla_rafsi)
stressed_fuhivla_rafsi << (fuhivla_head + stressed_syllable + FollowedBy(consonant) + onset + y)
stressed_initial_rafsi << (stressed_extended_rafsi | stressed_y_rafsi | stressed_y_less_rafsi)
stressed_long_rafsi << ((stressed_CCV_rafsi | stressed_CVC_rafsi) + consonant)
stressed_syllable << (FollowedBy(stressed) + (syllable | syllable + FollowedBy(stress)))
stressed_vowel << (FollowedBy(stressed) + (vowel | vowel + FollowedBy(stress)))
stressed_y_less_rafsi << (stressed_CVC_rafsi + (~y | stressed_CCV_rafsi | stressed_CVV_rafsi))
stressed_y_rafsi << ((stressed_long_rafsi | stressed_CVC_rafsi) + y)
su_clause << (ZeroOrMore(erasable_clause | su_word) + SU_clause)
su_word << (~NIhO_clause + ~LU_clause + ~TUhE_clause + ~TO_clause + ~SU_clause + ~FAhO_clause + any_word_SA_handling)
subsentence << (sentence | prenex + subsentence)
sumti << (sumti_1 + Optional(VUhO_clause + ZeroOrMore(free) + relative_clauses))
sumti_1 << (sumti_2 + Optional(joik_ek + Optional(stag) + KE_clause + ZeroOrMore(free) + sumti + Optional(KEhE_clause) + ZeroOrMore(free)))
sumti_2 << (sumti_3 + ZeroOrMore(joik_ek + sumti_3))
sumti_3 << (sumti_4 + Optional(joik_ek + Optional(stag) + BO_clause + ZeroOrMore(free) + sumti_3))
sumti_4 << (sumti_5 | gek + sumti + gik + sumti_4)
sumti_5 << (Optional(quantifier) + sumti_6 + (Optional(relative_clauses) | quantifier + selbri + Optional(KU_clause) + ZeroOrMore(free) + Optional(relative_clauses)))
sumti_6 << (ZO_clause + (ZeroOrMore(free) | ZOI_clause + (ZeroOrMore(free) | LOhU_clause + (ZeroOrMore(free) | lerfu_string + ~MOI_clause + Optional(BOI_clause) + (ZeroOrMore(free) | LU_clause + text + Optional(LIhU_clause) + (ZeroOrMore(free) | LAhE_clause + (ZeroOrMore(free) | NAhE_clause + BO_clause + ZeroOrMore(free)) + Optional(relative_clauses) + sumti + Optional(LUhU_clause) + (ZeroOrMore(free) | KOhA_clause + (ZeroOrMore(free) | LA_clause + ZeroOrMore(free) + Optional(relative_clauses) + OneOrMore(CMENE_clause) + (ZeroOrMore(free) | (LA_clause | LE_clause) + ZeroOrMore(free) + sumti_tail + Optional(KU_clause) + (ZeroOrMore(free) | li_clause))))))))))
sumti_tail << (Optional(sumti_6 + Optional(relative_clauses)) + (sumti_tail_1 | relative_clauses + sumti_tail_1))
sumti_tail_1 << (selbri + (Optional(relative_clauses) | quantifier + selbri + (Optional(relative_clauses) | quantifier + sumti)))
syllabic << (l | m | n | r)
syllable << (onset + ~y + nucleus + Optional(coda))
t << (ZeroOrMore(comma) + Regex('[tT]') + ~h + ~t + ~voiced)
tag << (tense_modal + ZeroOrMore(joik_jek + tense_modal))
tail_terms << (Optional(terms) + Optional(VAU_clause) + ZeroOrMore(free))
tanru_unit << (tanru_unit_1 + ZeroOrMore(CEI_clause + ZeroOrMore(free) + tanru_unit_1))
tanru_unit_1 << (tanru_unit_2 + Optional(linkargs))
tanru_unit_2 << (BRIVLA_clause + (ZeroOrMore(free) | GOhA_clause + Optional(RAhO_clause) + (ZeroOrMore(free) | KE_clause + ZeroOrMore(free) + selbri_3 + Optional(KEhE_clause) + (ZeroOrMore(free) | ME_clause + ZeroOrMore(free) + (sumti | lerfu_string) + Optional(MEhU_clause) + ZeroOrMore(free) + Optional(MOI_clause) + (ZeroOrMore(free) | (number | lerfu_string) + MOI_clause + (ZeroOrMore(free) | NUhA_clause + ZeroOrMore(free) + (mex_operator | SE_clause + ZeroOrMore(free) + (tanru_unit_2 | JAI_clause + ZeroOrMore(free) + Optional(tag) + (tanru_unit_2 | NAhE_clause + ZeroOrMore(free) + (tanru_unit_2 | NU_clause + Optional(NAI_clause) + ZeroOrMore(free) + ZeroOrMore(joik_jek + NU_clause + Optional(NAI_clause) + ZeroOrMore(free)) + subsentence + Optional(KEI_clause) + ZeroOrMore(free)))))))))))
tense_modal << (simple_tense_modal + (ZeroOrMore(free) | FIhO_clause + ZeroOrMore(free) + selbri + Optional(FEhU_clause) + ZeroOrMore(free)))
term << (ZeroOrMore(term_sa) + term_1)
term_1 << (sumti | ~gek + (tag | FA_clause + ZeroOrMore(free)) + (sumti | Optional(KU_clause) + ZeroOrMore(free)) | termset | NA_clause + KU_clause + ZeroOrMore(free))
term_sa << (term_start + ZeroOrMore(~term_start + (sa_word | SA_clause + ~term_start)) + SA_clause + FollowedBy(term_1))
term_start << (term_1 | LA_clause | LE_clause | LI_clause | LU_clause | LAhE_clause | quantifier + (term_start | gek + sumti + (gik | FA_clause | tag + term_start)))
terms << (OneOrMore(terms_1))
terms_1 << (terms_2 + ZeroOrMore(ZeroOrMore(pehe_sa) + PEhE_clause + ZeroOrMore(free) + joik_jek + terms_2))
terms_2 << (term + ZeroOrMore(ZeroOrMore(cehe_sa) + CEhE_clause + ZeroOrMore(free) + term))
terms_gik_terms << (term + (gik | terms_gik_terms) + term)
termset << (gek_termset | NUhI_clause + ZeroOrMore(free) + gek + terms + Optional(NUhU_clause) + ZeroOrMore(free) + gik + terms + Optional(NUhU_clause) + (ZeroOrMore(free) | NUhI_clause + ZeroOrMore(free) + terms + Optional(NUhU_clause) + ZeroOrMore(free)))
text << (intro_null + ZeroOrMore(NAI_clause) + text_part_2 + Optional(~text_1 + joik_jek) + Optional(text_1) + faho_clause + Optional(EOF))
text_1 << (I_clause + Optional(jek | joik) + Optional(Optional(stag) + BO_clause) + ZeroOrMore(free) + (Optional(text_1) | OneOrMore(NIhO_clause) + ZeroOrMore(free) + ZeroOrMore(su_clause) + (Optional(paragraphs) | paragraphs)))
text_part_2 << ((OneOrMore(CMENE_clause) | Optional(indicators)) + ZeroOrMore(free))
time << (ZI_clause + ZeroOrMore(time_offset) + Optional(ZEhA_clause + Optional(PU_clause + Optional(NAI_clause))) + (ZeroOrMore(interval_property) | Optional(ZI_clause) + OneOrMore(time_offset) + Optional(ZEhA_clause + Optional(PU_clause + Optional(NAI_clause))) + (ZeroOrMore(interval_property) | Optional(ZI_clause) + ZeroOrMore(time_offset) + ZEhA_clause + Optional(PU_clause + Optional(NAI_clause)) + (ZeroOrMore(interval_property) | Optional(ZI_clause) + ZeroOrMore(time_offset) + Optional(ZEhA_clause + Optional(PU_clause + Optional(NAI_clause))) + OneOrMore(interval_property)))))
time_offset << (PU_clause + Optional(NAI_clause) + Optional(ZI_clause))
unstressed_diphthong << (~stressed + diphthong + ~stress)
unstressed_syllable << (~stressed + syllable + (~stress | consonantal_syllable))
unstressed_vowel << (~stressed + vowel + ~stress)
unvoiced << (c | f | k | p | s | t | x)
v << (ZeroOrMore(comma) + Regex('[vV]') + ~h + ~v + ~unvoiced)
vocative << (OneOrMore(COI_clause + Optional(NAI_clause)) + (DOI_clause | COI_clause + Optional(NAI_clause) + (ZeroOrMore(COI_clause + Optional(NAI_clause)) | DOI_clause)))
voiced << (b | d | g | j | v | z)
vowel << ((a | e | i | o | u) + ~nucleus)
word << (lojban_word | non_lojban_word)
words << (Optional(pause) + ZeroOrMore(word + Optional(pause)))
x << (ZeroOrMore(comma) + Regex('[xX]') + ~h + ~x + ~c + ~k + ~voiced)
xi_clause << (XI_clause + ZeroOrMore(free) + (number | lerfu_string) + (Optional(BOI_clause) | XI_clause + ZeroOrMore(free) + VEI_clause + ZeroOrMore(free) + mex + Optional(VEhO_clause)))
y_less_rafsi << (~y_rafsi + CVC_rafsi + (~y | CCV_rafsi | CVV_rafsi) + ~any_extended_rafsi)
y_rafsi << ((long_rafsi | CVC_rafsi) + y + Optional(h))
ybu << (Y + ZeroOrMore(space_char) + BU)
z << (ZeroOrMore(comma) + Regex('[zZ]') + ~h + ~z + ~j + ~unvoiced)
zei_clause << (pre_clause + zei_clause_no_pre)
zei_clause_no_SA << (pre_zei_bu_no_SA + ZeroOrMore(Optional(zei_tail) + bu_tail) + zei_tail)
zei_clause_no_pre << (pre_zei_bu + ZeroOrMore(Optional(zei_tail) + bu_tail) + zei_tail + post_clause)
zei_tail << (OneOrMore(ZEI_clause + any_word))

